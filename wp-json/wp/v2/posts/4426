{"id":4426,"date":"2012-03-03T11:11:24","date_gmt":"2012-03-03T19:11:24","guid":{"rendered":"http:\/\/www.coertvonk.com\/?p=4426"},"modified":"2022-04-25T16:43:44","modified_gmt":"2022-04-25T23:43:44","slug":"complex-arithmetic-xmem","status":"publish","type":"post","link":"http:\/\/coertvonk.com\/sw\/hp41\/complex-arithmetic-xmem-4426","title":{"rendered":"Complex numbers on the HP-41"},"content":{"rendered":"<p>\r\n    Scientific calculator software to introduces complex number operations on the HP-41. Easy to use. Runs in extended memory.  Complex numbers are commonly used to simplify the analysis of linear circuits in electrical and mechanical engineering.  This program makes complex arithmetic as easy as working with normal numbers on HP-41CV and HP-41CX calculators.\\(\\)\r\n<\/p>\r\n\r\n<h2>\r\n    Features\r\n<\/h2>\r\n<p>\r\n    <ul>\r\n        <li>Ease of use<\/li>\r\n        <li>Displays the whole complex number at once<\/li>\r\n        <li>15 mathematical, 12 trigonometric, 12 hyperbolic and 10 stack manipulation functions.<\/li>\r\n        <li>Supports both rectangular and polar mode<\/li>\r\n        <li>Stack mechanism identical to the normal stack<\/li>\r\n        <li>Requires only 5 registers of main memory (assuming extended memory is used).<\/li>\r\n    <\/ul>\r\n<\/p>\r\n\r\n<h2>\r\n    History\r\n<\/h2>\r\n<p>\r\n    In the early 1980&#8217;s, I started a complex arithmetic library in Oxford Pascal for the Commodore-64. After hacking up a RS-232 level adjuster for the Commodore-64, I transferred the library to the Pr1me computer on campus.  From there, this program grew with me through college.\r\n<\/p>\r\n<p>\r\n    This program is a variation on Frans de Vries&#8217; Complex Arithmetic program [1]. I moved the code to extended memory and made it more intuitive.  The program now shows the result as a condensed complex number and makes the <span class=\"hp41-key\">R\/S<\/span> button behave like a <span class=\"hp41-cikey\">COMPLEX<\/span> prefix to operations.\r\n<\/p>\r\n<p>\r\n    Twenty-five years later, I restored my faithful HP-41 and use the same program once more. This version is also verified to run under Windows using Warren Furlow&#8217;s V41 simulator when compiled with Leo Duran&#8217;s hp41uc.\r\n<\/p>\r\n\r\n<h2>\r\n    Entering the program\r\n<\/h2>\r\n<\/p>\r\n<p>\r\n    The program consist of two parts. The first part labeled <code>CA<\/code> fits in a mere 5 registers of main memory. It handles the initialization and then jumps to the second part labeled <code>X<\/code>. This second part should be placed in extended memory, but can also be used in main memory.\r\n<\/p>\r\n<p>\r\n    Start by freeing up some program memory (<span class=\"hp41-key\">SIZE<\/span> 014). Enter both parts of the program using a wand, magnetic cards, HP-IL or type it in.  Pack it (<span class=\"hp41-key\">GTO<\/span> ..), and test the program with <span class=\"hp41-key\">XEQ<\/span> &#8220;CA&#8221;.  This clears the complex stack, initializes relevant flags and angular mode.  It then shows the value at the top of the complex stack and waits for input.  Assuming all went well, move part 2 to extended memory (&#8220;X&#8221; <span class=\"hp41-key\">SAVEP<\/span>) and remove line 019 from part 1.\r\n<\/p>\r\n<p>\r\n    Start the program using <span class=\"hp41-key\">XEQ<\/span> &#8220;CA&#8221;.  Again, this clears the complex stack and initializes flags and angular mode, but this time it will jump to extended memory.  It displays the top of the complex stack (Z1), and wait at <code>line 013<\/code> where.  At this point, you have the option of entering an operand or calling a operation.  At the end of each operation it will return to <code>line 013<\/code>.\r\n<\/p>\r\n<p>\r\n    Note that it is not possible to change the program while in extended memory.  Once the program executes in extended memory, the bytes near the <span class=\"hp41-key\">GTO<\/span> and <span class=\"hp41-key\">XEQ<\/span> instructions will be changed to match to the corresponding <code>LBL<\/code> address. This would cause the check sum of the fill to mismatch. For more details on running a program in extended memory, refer to the book &#8220;Extend your HP-41&#8221; [6].\r\n<\/p>\r\n\r\n<h2>\r\n    Usage\r\n<\/h2>\r\n<\/p>\r\n<p>\r\n    The program makes complex number arithmetic very similar to working with normal numbers. Numbers are entered and returned through a mechanism very similar to the regular stack.  The calculating environment consists of 6 complex stack registers, numbered <code>Z1<\/code> thru <code>Z6<\/code>, and a complex <code>LASTZ1<\/code> register. The large complex stack reduces the need for store and recall functions.\r\n<\/p>\r\n<p>\r\n    The keyboard overlay shown below, gives an overview of the complex number operations.\r\n\r\n        <div class=\"align-center\">\r\n            <figure>\r\n                <a class=\"hide-anchor fancybox\" href=\"\/wp-content\/uploads\/overlay.jpg\">\r\n                    <img  title=\"\" class=\"wp-image-6800\" src=\"\/wp-content\/uploads\/overlay.jpg\" alt=\"overlay\" width=\"300\" srcset=\"https:\/\/coertvonk.com\/wp-content\/uploads\/overlay.jpg 801w, https:\/\/coertvonk.com\/wp-content\/uploads\/overlay-251x400.jpg 251w, https:\/\/coertvonk.com\/wp-content\/uploads\/overlay-768x1222.jpg 768w, https:\/\/coertvonk.com\/wp-content\/uploads\/overlay-644x1024.jpg 644w, https:\/\/coertvonk.com\/wp-content\/uploads\/overlay-157x250.jpg 157w, https:\/\/coertvonk.com\/wp-content\/uploads\/overlay-189x300.jpg 189w, https:\/\/coertvonk.com\/wp-content\/uploads\/overlay-220x350.jpg 220w, https:\/\/coertvonk.com\/wp-content\/uploads\/overlay-314x500.jpg 314w, https:\/\/coertvonk.com\/wp-content\/uploads\/overlay-472x750.jpg 472w\" sizes=\"(max-width: 706px) 89vw, (max-width: 767px) 82vw, 740px\" \/>\r\n                <\/a>\r\n                <figcaption>\r\n                    HP41 keyboard overlay\r\n                <\/figcaption>\r\n            <\/figure>\r\n        <\/div>\r\n<\/p>\r\n\r\n<h3>\r\n    Operations\r\n<\/h3>\r\n<p style=\"padding-left: 30px;\">\r\n    Complex operations are called by pressing <span class=\"hp41-cikey\">COMPLEX<\/span> (the <span class=\"hp41-key\">R\/S<\/span> key on the normal keyboard) followed by the desired operation key. In the overlay, the complex operations can be identified by the blue paint splash. In this article, these complex operations are shown in a <span class=\"hp41-ckey\">blue box<\/span>.\r\n<\/p>\r\n<p style=\"padding-left: 30px;\">\r\n    After each operations, the result of the operation is stored on the complex stack as Z1, and shown on the display in a condensed format. To see the full accuracy, press <span class=\"hp41-key\">X<>Y<\/span> to see the imaginary part (or phase in Polar mode), and <span class=\"hp41-key\">X<>Y<\/span> again to see the real part (or modulus in Polar mode).\r\n<\/p>\r\n<p style=\"padding-left: 30px;\">\r\n    Most operation require one or two operands from the stack. Exceptions to this rule are functions that take a real number argument (<span class=\"hp41-ckey\">Z<sup>n<\/sup><\/span>, <span class=\"hp41-ckey\">Z<sup>1\/n<\/sup><\/span>, <span class=\"hp41-ckey\">n<sup>Z<\/sup><\/span>, <span class=\"hp41-ckey\">VIEWZn<\/span>, <span class=\"hp41-ckey\">Z1<span class=\"hp41-cxy\"> <\/span>Zn<\/span>), the mode switches (<span class=\"hp41-ckey\">RECT<\/span>, <span class=\"hp41-ckey\">POL<\/span>) and prefixes (<span class=\"hp41-g-key\">g<\/span>, <span class=\"hp41-ckey\">ARC<\/span>, <span class=\"hp41-ckey\">HYP<\/span>).\r\n<\/p>\r\n<p style=\"padding-left: 30px;\">\r\n    The function <span class=\"hp41-ckey\">Z<sup>1\/n<\/sup><\/span>, is a bit different.  It will return multiple answers: the n<sup>th<\/sup> roots of the complex number in Z1. The ALPHA annunciator indicates that more roots are available. Press <span class=\"hp41-cikey\">COMPLEX<\/span> to show the next root. If you leave ALPHA-mode to see the root in X and Y in full accuracy, be sure to restore the order of the stack before pressing the <span class=\"hp41-key\">R\/S<\/span> key to see the next root. When all roots are displayed, the first root will be available as Z1 on the complex stack (and X,Y on the regular stack).\r\n<\/p>\r\n<p style=\"padding-left: 30px;\">\r\n    The use of the prefixes <span class=\"hp41-ckey\">ARC<\/span> and <span class=\"hp41-ckey\">HYP<\/span> is similar to the use of the shift key, with flag 03 and 04 acting as the annunciator for <span class=\"hp41-ckey\">ARC<\/span> and <span class=\"hp41-ckey\">HYP<\/span> respectively. They can be used in any combination to denote and execute the desired function. The state of these flags only affects trigonometric operations.  To squeeze the program (866 bytes) into the x-memory, the operations ATAN, ATANH, ACOT and ACOTH had to be removed.\r\n<\/p>\r\n<p style=\"padding-left: 30px;\">\r\n    Note that operations can anywhere between 1 and take up to 6 seconds to execute.  Also, <span class=\"hp41-ckey\">BCUT<\/span> is only implemented in &#8220;<a href=\"https:\/\/coertvonk.com\/sw\/hp41\/complex-arithmetic-branchcut-5032\">Complex Arithmetic with adjustable branch cut for HP-41cv\/cx<\/a>&#8220;.\r\n<\/p>\r\n\r\n<h3>\r\n    Display\r\n<\/h3>\r\n<p style=\"padding-left: 30px;\">\r\n    After each operations, the result of the operation is stored on the complex stack as Z1, and shown on the display in a condensed format. To see the full accuracy, press <span class=\"hp41-key\">X<>Y<\/span> to see the imaginary part (or phase in Polar mode), and <span class=\"hp41-key\">X<>Y<\/span> again to see the real part (or modulus in Polar mode).\r\n<\/p>\r\n<p style=\"padding-left: 30px;\">\r\n    Both rectangular coordinates and polar form are supported for data entry and viewing. To switch between modes, use the <span class=\"hp41-ckey\">RECT<\/span> and <span class=\"hp41-ckey\">POL<\/span> operations. These operations also recall Z1 into the normal stack. Flag 0 shown on the LCD display serves as an annunciator for polar mode.\r\n<\/p>\r\n\r\n<h3>\r\n    Operands\r\n<\/h3>\r\n<p style=\"padding-left: 30px;\">\r\n    A few operations, such as <span class=\"hp41-ckey\">Z<sup>n<\/sup><\/span>, <span class=\"hp41-ckey\">Z<sup>1\/n<\/sup><\/span>, <span class=\"hp41-ckey\">n<sup>Z<\/sup><\/span>, <span class=\"hp41-ckey\">VIEWZn<\/span> and <span class=\"hp41-ckey\">Z1<span class=\"hp41-cxy\"> <\/span>Zn<\/span> require a real number operand in the X register.  Most other operations use a complex number operand.\r\n<\/p>\r\n<p style=\"padding-left: 30px;\">\r\n    Complex numbers can either be entered on the regular stack as an X,Y pair on the normal stack.  In rectangular mode, the real part of the complex number in should be placed in X register and the imaginary part in Y.  In polar mode, the magnitude should be in X and the phase in Y.\r\n<\/p>\r\n<p style=\"padding-left: 30px;\">\r\n    If no complex number is entered on the normal stack, the operation will take the value from the complex stack.\r\n<\/p>\r\n\r\n<h3>\r\n    Error handling\r\n<\/h3>\r\n<p style=\"padding-left: 30px;\">\r\n    The program has no accommodation (apart from the SF 25 at line 040 in &#8220;X&#8221;) to avoid error halts. This implies that attempts to divide by zero, take the log of zero, etc. will usually cause a DATA ERROR halt. Pressing <span class=\"hp41-cnkey\">INIT<\/span> lets the program return to its normal halting point at line 013 in &#8220;X&#8221;.\r\n<\/p>\r\n\r\n<h2>\r\n    Examples\r\n<\/h2>\r\n<p>\r\n    The following examples assume a <span class=\"hp41-key\">ENG<\/span> 3, <span class=\"hp41-key\">SF<\/span> 28 and <span class=\"hp41-key\">CF<\/span> 29 display mode.\r\n<\/p>\r\n\r\n<h3>\r\n    Calculate \\((2 + 3j)(7 &#8211; 6j) + (4 + 5j)\\)\r\n<\/h3>\r\n<p>\r\n    <div class=\"flex-container\">\r\n        <table class=\"cvonk-table small grey-background\">\r\n            <caption>\r\n                \\((2 + 3j)(7 &#8211; 6j) + (4 + 5j)\\)\r\n            <\/caption>\r\n            <tr>\r\n                <th>Key strokes<\/th>\r\n                <th>Display<\/th>\r\n            <\/tr>\r\n            <tr>\r\n                <td><em>input<\/em><\/td>\r\n                <td><em>display<\/em><\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td><span class=\"hp41-key\">XEQ<\/span> &#8220;CA&#8221;<\/td>\r\n                <td>0.00E0+0.00E0J<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td>3 <span class=\"hp41-key\">ENTER<span class=\"hp41-up-arrow\"> <\/span><\/span><\/td>\r\n                <td>3.000<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td>2 <span class=\"hp41-cikey\">COMPLEX<\/span> <span class=\"hp41-ckey\">ENTER<span class=\"hp41-cup-arrow\"> <\/span><\/span><\/td>\r\n                <td>2.00E0+3.00E0J<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td>6 <span class=\"hp41-key\">CHS<\/span><\/td>\r\n                <td> <\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td><span class=\"hp41-key\">ENTER<span class=\"hp41-up-arrow\"> <\/span><\/span><\/td>\r\n                <td>-6.000<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td>7<span class=\"hp41-cikey\">COMPLEX<\/span> <span class=\"hp41-ckey\">*<\/span><\/td>\r\n                <td>32.0E0+9.00E0J<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td>5 <span class=\"hp41-key\">ENTER<span class=\"hp41-up-arrow\"> <\/span><\/span><\/td>\r\n                <td>5.000<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td>4 <span class=\"hp41-cikey\">COMPLEX<\/span> <span class=\"hp41-ckey\">+<\/span><\/td>\r\n                <td>36.0E0+14.0E0J<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td><span class=\"hp41-key\">X<span class=\"hp41-cxy\"> <\/span>Y<\/span><\/td>\r\n                <td>36.000<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td id=\"\" dir=\"\" lang=\"\" style=\"width: 150px;\" colspan=\"1\" rowspan=\"1\" valign=\"\"><span class=\"hp41-key\">X<span class=\"hp41-cxy\"> <\/span>Y<\/span><\/td>\r\n                <td>14.000<\/td>\r\n            <\/tr>\r\n        <\/table>\r\n    <\/div>\r\n<\/p>\r\n<p>\r\n    The answer is \\(36 + 14j\\)\r\n<\/p>\r\n\r\n<h3>\r\n    Calculate \\((3 + 4.5j)^5\\)\r\n<\/h3>\r\n<p>\r\n    <div class=\"flex-container\">\r\n        <table class=\"cvonk-table small grey-background\">\r\n            <caption>\r\n                \\((3 + 4.5j)^5\\)\r\n            <\/caption>\r\n            <tr>\r\n                <th>Key strokes<\/th>\r\n                <th>Display<\/th>\r\n            <\/tr>\r\n            <tr>\r\n                <td><em>input<\/em><\/td>\r\n                <td><em>display<\/em><\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td>4.5 <span class=\"hp41-key\">ENTER<span class=\"hp41-up-arrow\"> <\/span><\/span><\/td>\r\n                <td>4.500<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td>3 <span class=\"hp41-cikey\">COMPLEX<\/span> <span class=\"hp41-ckey\">ENTER<span class=\"hp41-cup-arrow\"> <\/span><\/span><\/td>\r\n                <td>3.00E0+4.50E0J<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td>5 <span class=\"hp41-cikey\">COMPLEX<\/span> <span class=\"hp41-ckey\">Z<sup>N<\/sup><\/span><\/td>\r\n                <td>926.E0-4.53E3J<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td><span class=\"hp41-key\">X<span class=\"hp41-xy\"> <\/span>Y<\/span><\/td>\r\n                <td>-4.533 03<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td><span class=\"hp41-key\">X<span class=\"hp41-xy\"> <\/span>Y<\/span><\/td>\r\n                <td>926.4 00<\/td>\r\n            <\/tr>\r\n        <\/table>\r\n    <\/div>\r\n<\/p>\r\n<p>\r\n    The answer is \\(926.4 &#8211; 4.533j\\)\r\n<\/p>\r\n<p>\r\n    Show what is in the <span class=\"hp41-ckey\">LASTZ1<\/span> complex register\r\n\r\n    <div class=\"flex-container\">\r\n        <table class=\"cvonk-table small grey-background\"><caption>LASTZ1<\/caption>\r\n            <tr>\r\n                <th>Key strokes<\/th>\r\n                <th>Display<\/th>\r\n            <\/tr>\r\n            <tr>\r\n                <td><span class=\"hp41-cikey\">COMPLEX<\/span> <span class=\"hp41-ckey\">LASTZ1<\/span><\/td>\r\n                <td>3.00E0+4.50E0J<\/td>\r\n            <\/tr>\r\n        <\/table>\r\n    <\/div>\r\n<\/p>\r\n<p>\r\n    Note that the complex number is saved, not the power 5<\/li>\r\n<\/p>\r\n\r\n<h3>\r\n    Calculate \\(\\frac{1}{3\\ \\angle 30^o}\\)\r\n<\/h3>\r\n<p>\r\n    <div class=\"flex-container\">\r\n        <table class=\"cvonk-table small grey-background\">\r\n            <caption>\r\n                \\(\\frac{1}{3\\ \\angle 30^o}\\)\r\n            <\/caption>\r\n            <tr>\r\n                <th>Key strokes<\/th>\r\n                <th>Display<\/th>\r\n            <\/tr>\r\n            <tr>\r\n                <td><span class=\"hp41-cikey\">COMPLEX<\/span> <span class=\"hp41-ckey\">POL<\/span><\/td>\r\n                <td>5.41E0<56.3E0<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td>40 <span class=\"hp41-key\">ENTER<span class=\"hp41-up-arrow\"> <\/span><\/span><\/td>\r\n                <td>40.00 00<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td>3 <span class=\"hp41-cikey\">COMPLEX<\/span> <span class=\"hp41-ckey\">1\/Z<\/span><\/td>\r\n                <td>333.E-3<-40.0E0<\/td>\r\n            <\/tr>\r\n        <\/table>\r\n    <\/div>\r\n<\/p>\r\n<p>\r\n    The answer is \\(0.333\\ \\angle{-40}^o\\)\r\n<\/p>\r\n\r\n<h3>\r\n    Calculate \\(asinh(8 &#8211; 5j)\\)\r\n<\/h3>\r\n<p>\r\n    <div class=\"flex-container\">\r\n        <table class=\"cvonk-table small grey-background\">\r\n            <caption>\r\n                \\(asinh(8 &#8211; 5j)\\)\r\n            <\/caption>\r\n            <tr>\r\n                <th>Key strokes<\/th>\r\n                <th>Display<\/th>\r\n            <\/tr>\r\n            <tr>\r\n                <td><span class=\"hp41-cikey\">COMPLEX<\/span> <span class=\"hp41-ckey\">RECT<\/span><\/td>\r\n                <td>255.E-3-214.E-3J<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td>5 <span class=\"hp41-key\">CHS<\/span><\/td>\r\n                <td> <\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td><span class=\"hp41-key\">ENTER<span class=\"hp41-up-arrow\"> <\/span><\/span><\/td>\r\n                <td>-5.000 00<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td>8 <span class=\"hp41-cikey\">COMPLEX<\/span> <span class=\"hp41-ckey\">ARC<\/span><\/td>\r\n                <td> <\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td><span class=\"hp41-ckey\">HYP<\/span> <span class=\"hp41-ckey\">SIN<\/span><\/td>\r\n                <td>2.94E0-556.E-3J<\/td>\r\n            <\/tr>\r\n        <\/table>\r\n    <\/div>\r\n<\/p>\r\n<p>\r\n    The first answer is still there\r\n\r\n    <div class=\"flex-container\">\r\n        <table class=\"cvonk-table small grey-background\">\r\n            <caption>\r\n                First answer\r\n            <\/caption>\r\n            <tr>\r\n                <td><em>input<\/em><\/td>\r\n                <td><em>display<\/em><\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td>5 <span class=\"hp41-cikey\">COMPLEX<\/span> <span class=\"hp41-ckey\">Z1<span class=\"hp41-cxy\"> <\/span>Zn<\/span><\/td>\r\n                <td>94E0-556.E-3J<\/td>\r\n            <\/tr>\r\n        <\/table>\r\n    <\/div>\r\n<\/p>\r\n\r\n<h3>\r\n    Calculate \\(\\sqrt[3]{5 + 3j}\\)\r\n<\/h3>\r\n<p>\r\n    <div class=\"flex-container\">\r\n        <table class=\"cvonk-table small grey-background\">\r\n            <caption>\r\n                \\(\\sqrt[3]{5 + 3j}\\)\r\n            <\/caption>\r\n            <tr>\r\n                <th>Key strokes<\/th>\r\n                <th>Display<\/th>\r\n            <\/tr>\r\n            <tr>\r\n                <td>3 <span class=\"hp41-key\">ENTER<span class=\"hp41-up-arrow\"> <\/span><\/span><\/td>\r\n                <td>3.000 00<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td>5 <span class=\"hp41-cikey\">COMPLEX<\/span> <span class=\"hp41-ckey\">VIEW<\/span><\/td>\r\n                <td>5.00E0+3.00E0J<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td>3 <span class=\"hp41-cikey\">COMPLEX<\/span> <span class=\"hp41-ckey\">Z<sup>1\/n<\/sup><\/span><\/td>\r\n                <td>1.77E0+322.E-3J (alpha)<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td><span class=\"hp41-cikey\">COMPLEX<\/span><\/td>\r\n                <td>-1.16E0+1.37E0J (alpha)<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td><span class=\"hp41-cikey\">COMPLEX<\/span><\/td>\r\n                <td>-606.E-3-1.69E0J (alpha)<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td id=\"\" dir=\"\" lang=\"\" style=\"width: 150px;\" colspan=\"1\" rowspan=\"1\" valign=\"\"><span class=\"hp41-cikey\">COMPLEX<\/span><\/td>\r\n                <td>1.77E0+322.E-3J<\/td>\r\n            <\/tr>\r\n        <\/table>\r\n    <\/div>\r\n<\/p>\r\n\r\n<h3>\r\n    Calculate \\(csch(1 + 2j)\\)\r\n<\/h3>\r\n<p>\r\n    <div class=\"flex-container\">\r\n        <table class=\"cvonk-table small grey-background\">\r\n            <caption>\r\n                \\(csch(1 + 2j)\\)\r\n            <\/caption>\r\n            <tr>\r\n                <th>Key strokes<\/th>\r\n                <th>Display<\/th>\r\n            <\/tr>\r\n            <tr>\r\n                <td>2 <span class=\"hp41-key\">ENTER<span class=\"hp41-up-arrow\"> <\/span><\/span><\/td>\r\n                <td>2.000 00<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td>1 <span class=\"hp41-cikey\">COMPLEX<\/span> <span class=\"hp41-ckey\">HYP<\/span> <span class=\"hp41-ckey\">CSC<\/span><\/td>\r\n                <td>-489.E-3+1.40E0J<\/td>\r\n            <\/tr>\r\n        <\/table>\r\n    <\/div>\r\n<\/p>\r\n\r\n<h3>\r\n    Calculate \\(\\ln(4 + 5j) + (3 &#8211; 2j)^{(2 &#8211; 3j)}\\)\r\n<\/h3>\r\n<p>\r\n    <div class=\"flex-container\">\r\n        <table class=\"cvonk-table small grey-background\">\r\n            <caption>\r\n                \\(\\ln(4 + 5j) + (3 &#8211; 2j)^{(2 &#8211; 3j)}\\)\r\n            <\/caption>\r\n            <tr>\r\n                <th>Key strokes<\/th>\r\n                <th>Display<\/th>\r\n            <\/tr>\r\n            <tr>\r\n                <td>5 <span class=\"hp41-key\">ENTER<span class=\"hp41-up-arrow\"> <\/span><\/span><\/td>\r\n                <td>5.000 00<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td>4 <span class=\"hp41-cikey\">COMPLEX<\/span> <span class=\"hp41-ckey\">LN<\/span><\/td>\r\n                <td>1.86E0+896.E-3J<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td>2 <span class=\"hp41-key\">CHS<\/span><\/td>\r\n                <td> <\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td><span class=\"hp41-key\">ENTER<span class=\"hp41-up-arrow\"> <\/span><\/span><\/td>\r\n                <td>-2.000 00<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td>3 <span class=\"hp41-cikey\">COMPLEX<\/span> <span class=\"hp41-ckey\">ENTER<span class=\"hp41-cup-arrow\"> <\/span><\/span><\/td>\r\n                <td>3.00E0-2.00E0J<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td>3 <span class=\"hp41-key\">CHS<\/span><\/td>\r\n                <td> <\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td><span class=\"hp41-key\">ENTER<span class=\"hp41-up-arrow\"> <\/span><\/span><\/td>\r\n                <td>-3.000 00<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td>2 <span class=\"hp41-cikey\">COMPLEX<\/span> <span class=\"hp41-ckey\">Z2<sup>Z1<\/sup><\/span><\/td>\r\n                <td>-1.79E-3-3.19E-3J<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td><span class=\"hp41-cikey\">COMPLEX<\/span> <span class=\"hp41-ckey\">+<\/span><\/td>\r\n                <td>1.85E0+893.E-3J<\/td>\r\n            <\/tr>\r\n        <\/table>\r\n    <\/div>\r\n<\/p>\r\n\r\n<h3>\r\n    Calculate \\(2^{3+4j}\\)\r\n<\/h3>\r\n<p>\r\n    <div class=\"flex-container\">\r\n        <table class=\"cvonk-table small grey-background\"><caption>\\(2^{3+4j}\\)<\/caption>\r\n            <tr>\r\n                <th>Key strokes<\/th>\r\n                <th>Display<\/th>\r\n            <\/tr>\r\n            <tr>\r\n                <td>4 <span class=\"hp41-key\">ENTER<span class=\"hp41-up-arrow\"> <\/span><\/span><\/td>\r\n                <td>4.000 00<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td>3 <span class=\"hp41-cikey\">COMPLEX<\/span> <span class=\"hp41-ckey\">ENTER<span class=\"hp41-cup-arrow\"> <\/span><\/span><\/td>\r\n                <td>3.00E0+4.00E0J<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td>2 <span class=\"hp41-cikey\">COMPLEX<\/span> <span class=\"hp41-ckey\">N<sup>Z<\/sup><\/span><\/td>\r\n                <td>-7.46E0+2.89E0J<\/td>\r\n            <\/tr>\r\n        <\/table>\r\n    <\/div>\r\n<\/p>\r\n<p>\r\n    The number \\(N\\) must always be the last one that is entered.\r\n<\/p>\r\n\r\n<h2>\r\n    Tweaks\r\n<\/h2>\r\n<p>\r\n    <ul>\r\n        <li>\r\n            The input\/output angular mode for polar coordinates is set in line 004 of program &#8220;CA&#8221;,  Default is DEG, change to RAD for radians.\r\n        <\/li>\r\n        <li>\r\n            The size of the complex stack can be adjusted in line 008 of program &#8220;CA&#8221;.\r\n        <\/li>\r\n        <li>\r\n            If flag 14 is set when calling &#8220;CA&#8221;, the stack will not be cleared, which may be useful if you left &#8220;CA&#8221; temporarily and want to continue. This however assumes that the data registers used for the complex stack are left undisturbed.\r\n        <\/li>\r\n        <li>\r\n            The program uses flag 22 &#8220;numeric entry&#8221; to determine if there is a new entry in X,Y. If there is a numeric entry, the number is first pushed onto the complex stack, respecting stack lift status. This implies that you can clear flag 22 manually if you have made an accidental digit entry and still want the next operation to be performed on the current Z1.\r\n        <\/li>\r\n        <li>\r\n            Operands that require a real number input, will always take that number from the X register, new entry or not. If stack lift is disabled, the stack will first be shifted down, so the function will be performed on Z2. This is done, so that you may have <span class=\"hp41-ckey\">ENTER<span class=\"hp41-cup-arrow\"> <\/span><\/span>&#8216;ed the complex number on which you want the function to be executed, and without the shift down there would be left a superfluous copy of that number on the stack.\r\n        <\/li>\r\n    <\/ul>\r\n<\/p>\r\n\r\n<h2>\r\n    Source code\r\n<\/h2>\r\n<p>\r\n    \u00c1ngel Martin combined several of my focal programs from this site and compiled ROM and MOD images.  They are available through <a href=\"https:\/\/github.com\/cvonk\/hp41-focal\/\">GitHub<\/a>. Note that this program consists of two parts.\r\n\r\n    <ol>\r\n        <li>\r\n            Part 1 should be placed in main memory and is available as <a href=\"\/wp-content\/hp-41\/ca300.txt\">source code<\/a>, <a href=\"\/wp-content\/hp-41\/ca300.raw\">raw<\/a> for the V41 emulator and <a href=\"\/wp-content\/hp-41\/ca300.pdf\">barcode<\/a> for the HP Wand (HP82153A)\r\n        <\/li>\r\n        <li>\r\n            Part 2, can be placed in either main or extended memory. When placed in extended memory, the instruction GTO &#8220;X&#8221; should be removed. This part is available as <a href=\"\/wp-content\/hp-41\/ca300xm.txt\">source code<\/a>, <a href=\"\/wp-content\/hp-41\/ca300xm.raw\">raw<\/a> for the V41 emulator and <a href=\"\/wp-content\/hp-41\/ca300xm.pdf\">barcode<\/a> for the HP Wand.\r\n        <\/li>\r\n        <li>\r\n            Requires X-Functions module on the HP-41cv\r\n        <\/li>\r\n        <li>\r\n            The keyboard overlay is available as <a href=\"\/wp-content\/hp-41\/ca300.jpg\">image<\/a> and <a href=\"\/wp-content\/hp-41\/ca300inv.jpg\">inverted<\/a>.  These are scaled down by 98% so when printed on 4\u00d76&#8243;, it typically comes out as true-size.\r\n        <\/li>\r\n    <\/ol>\r\n<\/p>\r\n<p>\r\n    Available through the repository\r\n    <div class=\"flex-container tight\">\r\n         <a class=\"hide-anchor\" href=\"https:\/\/github.com\/cvonk\/hp41-focal\">\r\n             <img src=\"https:\/\/socialify.git.ci\/cvonk\/hp41-focal\/image?description=1&#038;issues=1&#038;language=1&#038;name=1&#038;owner=1&#038;pattern=Circuit%20Board&#038;stargazers=1&#038;theme=Light\" width=\"500\" \/>\r\n         <\/a>\r\n    <\/div>\r\n<\/p>\r\n\r\n<h3>\r\n    part 1\r\n<\/h3>\r\n<p>\r\n    <div class=\"flex-container math\">\r\n        <pre class=\"brush: hpfocal; gutter: false; title: ; toolbar: false; notranslate\" title=\"\">; The program consists of two parts.  The part listed below should be in main\r\n; memory.  The other part (listed in CA300xm.txt) can be placed in either main\r\n; or extended memory.  When placed in extended memory, THE INSTRUCTION GTO \"X\"\r\n; SHOULD BE REMOVED.\r\n;\r\n; Before placing the second part in XM, the program should be PACKed\r\n; and run in RAM.  This should be done to compile all the GTO's and\r\n; XEQ's.  If this is not done one will see CHKSUM ERR when trying to\r\n; download this program into RAM. [9]\r\n\r\n1\tLBL \"CA\"\r\n2\tCF 03\t\t; clear prefix flags (ARC, HYP)\r\n3\tCF 04\r\n4\tDEG\r\n5\tFS? 14\t\t; if the \"do not clear stack\" flag is set\r\n6\tGTO 00\t\t;   then jump to LBL 00,\r\n7\tSIZE?\t\t;   else if needed extended the # of data registers (NEW: LINE REMOVED)\r\n8\t6\r\n9\tSTO 00\r\n10\tST+ X\r\n11\t3\r\n12\t+\r\n13\tX>Y?\r\n14\tPSIZE\r\n15\tCLX\r\n16\tSTO 01\t\t; clear LASTZ\r\n17\tSTO 02\r\n18\tLBL 00\r\n19\tGTO \"X\"\t\t ; REMOVE THIS LINE when LBL \"X\" in X-memory !!\r\n20\t\"\\8D\\BE\"\r\n21\tRCL M\r\n22\tSTO b\t\t; jump to \"X\" in extended memory at address 0x8DBE\r\n22\tEND<\/pre>\r\n    <\/div>\r\n<\/p>\r\n\r\n<h3>\r\n    part 2\r\n<\/h3>\r\n<p>\r\n    <ul>\r\n        <li>\r\n            Stack and alpha registers:\r\n            <ul>\r\n                <li>The program uses all registers<\/li>\r\n            <\/ul>\r\n        <\/li>\r\n        <li>\r\n            Data registers:\r\n            <ul>\r\n                <li>R00, depth of complex stack (default value is 6)<\/li>\r\n                <li>R01, real part of LASTZ1<\/li>\r\n                <li>R02, imaginary part of LASTZ1<\/li>\r\n                <li>R03, real part of complex number Z1<\/li>\r\n                <li>R04, imaginary part of complex number Z1<\/li>\r\n                <li>:<\/li>\r\n                <li>R13, real part of complex number Z6<\/li>\r\n                <li>R14, imaginary part of complex number Z6<\/li>\r\n                <li>Note that the internal format of the complex stack is always rectangular.<\/li>\r\n            <\/ul>\r\n        <\/li>\r\n        <li>\r\n            Flags:\r\n            <ul>\r\n                <li>flag 00, &#8220;POL&#8221;, when set indicates Polar notation (POL), otherwise rectangular notation (RECT)<\/li>\r\n                <li>flag 02, &#8220;no stack lift&#8221;, when set disables the stack lift<\/li>\r\n                <li>flag 03, &#8220;ARC&#8221;, when set indicates inverse trigonometric operation (ARC)<\/li>\r\n                <li>flag 04, &#8220;HYP&#8221;, when set indicates hyperbolic operation (HYP)<\/li>\r\n                <li>flag 10, &#8220;alt operation&#8221;, allows similar operations to reuse code<\/li>\r\n                <li>flag 14, &#8220;clipped corner&#8221;, is used for all but magnetic cards. During initialization it indicates &#8220;do not clear stack&#8221;; during keyboard fetching it indicates more key strokes need to follow; and during trigonometry operations, indicates inverse operation.<\/li>\r\n                <li>flag 22, &#8220;keyboard input&#8221;, set when numeric input is entered from the keyboard, cleared on power cycle. [7]<\/li>\r\n                <li>flag 25, &#8220;ignore error&#8221;, when set, ignores improper operations (like div by zero) or range errors.<\/li>\r\n                <li>flag 30, used for &#8220;always false&#8221; test. Used to negate prior test. [7]<\/li>\r\n                <li>flag 47, &#8220;shift set&#8221;, used internally in shifted operations.<\/li>\r\n                <li>flag 44-46, cleared as a side effect of showing the &#8220;shift&#8221; annunciator<\/li>\r\n                <li>flag 48-55, cleared as a side effect of showing the &#8220;shift&#8221; annunciator<\/li>\r\n            <\/ul>\r\n        <\/li>\r\n        <li>\r\n            Legend:\r\n            <ul>\r\n                <li>(x + y.j), complex number held on the regular stack<\/li>\r\n                <li>X register holds the real part (x)<\/li>\r\n                <li>Y register holds the imaginary part (y)<\/li>\r\n                <li>(M . e^j.phi), complex number in polar notation<\/li>\r\n            <\/ul>\r\n        <\/li>\r\n    <\/ul>\r\n<\/p>\r\n<p>\r\n    <div class=\"flex-container math\">\r\n        <pre class=\"brush: hpfocal; gutter: false; title: ; toolbar: false; notranslate\" title=\"\">  ; INITIALIZE AND MAIN LOOP\r\n;\r\n; An infinite loop to fetch a keystroke identifying the operation to be\r\n; executed.  The \"shift\" key causes the \"shift\" status to be toggled, for all\r\n; other keys the LBL that matches the key code will be called (or keycode+5 if\r\n; \"shift\" was active).\r\n;\r\n; called      : from \"CA\" in main memory, or\r\n;               in response to [CINIT] keycode (labeled [ON] on keyboard)\r\n; on entry    : when flag 14 is set, the complex stack will not be cleared\r\n; on exit     : value of Z1 shown.  Also available as X,Y.\r\n\r\n1\tLBL \"X\"\r\n2\tRDN\r\n3\tFC?C 14\t\t; if the \"do not clear stack\" flag is not set\r\n4\tXEQ 48\t\t;   then clear the complex stack\r\n\r\n5\tLBL 01\t\t; [CINIT] operation\r\n6\tCF 10\r\n7\tCF 22\r\n8\tCF 25\r\n9\tFS? 00\r\n10\tR-P\r\n11\tXEQ 10\t\t; display complex number (x + y.j)\r\n12\tSTOP\r\n13\tENTER^\r\n14\tLBL 02\r\n15\tCLX\r\n16\tGETKEY\t\t; wait for an operation keycode\r\n17\tX=0?\r\n18\tGTO 02\r\n19\t31\r\n20\tX#Y?\t\t; if not the \"shift\" key\r\n21\tGTO 00\t\t;   then handle that operation\r\n22\tR^  \t\t;   else update the shift annunciator\r\n23\tR^\r\n24\t\"&#92;&#48;1&#92;&#48;0\"\r\n25\tFS? 47\r\n26\tCLA\r\n27\tRCLFLAG\r\n28\tASTO d\r\n29\tSTOFLAG\r\n30\tAOFF\r\n31\tGTO 02\r\n\r\n32\tLBL 00\t   \t; handle operation associated with a keycode\r\n31\tCLX\r\n34\t5\r\n35\tFC? 47\t\t; if \"shift was active\"\r\n36\tCLX \t\t;   then increment key code by 5\r\n37\t+\r\n38\tRDN\r\n39\tCLD\r\n40\tSF 25\r\n41\tXEQ IND T\t; call the corresponding operation\r\n42\tFC?C 14\r\n43\tGTO 01\r\n44\tENTER^\r\n45\tGTO 02\r\n\r\n; TOGGLE [ARC] MODIFIER, for ASIN, ACOS, ATAN\r\n\r\n46\tLBL 11\t\t; [ARC], key label [sigma+]\r\n47\tFC?C 03\r\n48\tSF 03\r\n49\tSF 14\t\t; indicate \"more key strokes to follow\"\r\n50\tRTN\r\n\r\n; TOGGLE [HYP] MODIFIER, for SINH, COSH and TANH\r\n\r\n51\tLBL 16\t\t; [HYP], key label [sigma-]\r\n52\tFC?C 04\r\n53\tSF 04\r\n54\tSF 14\t\t; indicate \"more key strokes to follow\"\r\n55\tRTN\r\n\r\n; SWITCH BETWEEN POLAR AND RECTANGULAR NOTATION\r\n\r\n56\tLBL 68\t\t; [RECT], key label [P>R]\r\n57\tCF 00\r\n58\tGTO 00\r\n59\tLBL 69\t\t; [POL], key label [R>P]\r\n60\tSF 00\r\n61\tLBL 00\r\n62\tRCL 04\t\t; get Z1 from the complex stack as (x + y.j)\r\n63\tRCL 03\r\n64\tRTN\r\n\r\n; COMPLEX RECIPROCAL (1\/Z)\r\n;\r\n; on entry : Z in X,Y registers in the form (x + y.j)\r\n; on exit  : the result is stored as Z1 on the complex stack\r\n;    \t     the result is stored in X,Y in the form (x + y.j)\r\n;\t     LASTZ1 holds a copy of the operation operand Z\r\n\r\n65\tLBL 12\t    \t; [1\/Z] operation\r\n\r\n66\tXEQ 09\t\t; push (x + y.j) onto complex stack and update LASTZ1\r\n67\tXEQ 31\t\t; compute (x + j.y) = 1 \/ (x + j.y)\r\n68\tGTO 03\t\t; copy (x + y.j) to complex stack, and return\r\n\r\n; COMPLEX ENTER^\r\n;\r\n; on entry : Z in X,Y registers in the form (x + y.j)\r\n; on exit  : Z is pushed up the complex stack as Z1 and Z2\r\n;    \t     Z is X,Y in the form (x + y.j)\r\n;    \t     LASTZ1 is unchanged\r\n\r\n69\tLBL 41\t        ; [CENTER^] operation\r\n\r\n70\tXEQ 04\t\t; push (x + y.j) onto complex stack\r\n71\tXEQ 11\t\t; move complex stack up, Z1 > Z2 > Z3 > Z4 > Z5 > Z6\r\n72\tSF 02\t\t; \"no stack lift\"\r\n73\tRTN\r\n\r\n; COMPLEX CLEAR STACK\r\n;\r\n; on entry : n\/a\r\n; on exit  : Z1..Z6 on the complex stack are set to (0 + 0j)\r\n;    \t     LASTZ1 is unchanged\r\n\r\n74\tLBL 48\t        ; [CCLST] operation\r\n\r\n75\tRCL 00\r\n76\tISG X\r\n77\t\"\"\r\n78\tST+ X\r\n79\t E3\r\n80\t\/\r\n81\t3\r\n82\t+\r\n83\t.\r\n84\tLBL 36\r\n85\tSTO IND Y\r\n86\tISG Y\r\n87\tGTO 36\r\n88\tCF 02\t\t; no \"no stack lift\"\r\n89\tCLST\r\n90\tRTN\r\n\r\n; COMPLEX CHANGE SIGN AND COMPLEX CONJUGATE (Complement)\r\n;\r\n;     -(x + y.j) = -x - y.j  (change sign)\r\n;     (x + y.j)* =  x - y.j  (conjugate)\r\n;\r\n; on entry : Z in X,Y registers in the form (x + y.j)\r\n; on exit  : the result is stored as Z1 on the complex stack\r\n;    \t     the result is stored in X,Y in the form (x + y.j)\r\n;\t     LASTZ1 holds a copy of the operation operand Z\r\n\r\n91\tLBL 42\t\t; [CHSZ] operation\r\n92\tSF 10\r\n93\tLBL 47\t\t; [COMPLZ] operation\r\n\r\n94\tXEQ 04\t\t; push (x + y.j) onto complex stack\r\n95\tFS? 10\r\n96\tCHS\r\n97\tX<>Y\r\n98\tCHS\r\n99\tX<>Y\r\n100\tGTO 03\t\t; copy (x + y.j) to complex stack, and return\r\n\r\n; CLEAR Z1\r\n;\r\n; on entry : Z in X,Y registers in the form (x + y.j)\r\n; on exit  : Z is pushed up the complex stack as Z1 and Z2\r\n;    \t     Z is X,Y in the form (x + y.j)\r\n;    \t     LASTZ1 is unchanged\r\n\r\n101\tLBL 49\t        ; [CLZ1] operation\r\n\r\n102\tXEQ 04\t\t; push (x + y.j) onto complex stack\r\n103\tCLST\r\n104\tSF 02\t\t; \"no stack lift\"\r\n105\tGTO 03\t\t; copy (x + y.j) to complex stack, and return\r\n\r\n; LAST Z1\r\n;\r\n; on entry : n\/a\r\n; on exit  : the operand from the last numeric operation (except CHSZ)\r\n;              is pushed onto the complex stack\r\n;    \t     the operand from the last numeric operation (except CHSZ)\r\n;              is stored in X,Y in the form (x + y.j)\r\n\r\n106\tLBL 88 \t  \t; [LASTZ1] operation\r\n\r\n107\tFS? 02\r\n108\tFS? 22\t\t; if \"no stack lift\" or \"input from keyboard\"\r\n109\tXEQ 41\t\t;   then perform ENTER^\r\n110\tCF 02\r\n111\tRCL 02\t\t; LASTZ1\r\n112\tRCL 01\r\n113\tGTO 03\t\t; copy (x + y.j) to complex stack, and return\r\n\r\n; COMPLEX ADDITION AND SUBTRACTION\r\n;\r\n;     (z + t.j) + (x + y.j) = (x + z) + j.(y + t)\r\n;     (z + t.j) - (x + y.j) = (x - z) + j.(y - t)\r\n;\r\n; on entry : if number was entered on the keyboard,\r\n;              then (x + y.j) as entered in X,Y registers, and\r\n;                   (z + t.j) from Z1 on the complex stack\r\n;              else (x + y.j) from Z1 on the complex stack, and\r\n;                   (z + t.j) from Z2 on the complex stack\r\n; on exit  : the result is stored as Z1 on the complex stack\r\n;    \t     the result is stored in X,Y in the form (x + y.j)\r\n;\t     LASTZ1 holds a copy of (x + y.j)\r\n\r\n114\tLBL 51\t\t; [C-] operation\r\n115\tSF 10\r\n116\tLBL 61\t\t; [C+] operation\r\n\r\n117\tXEQ 07\t\t; get two operands, as (x + j.y) and (z + j.t)\r\n118\tFS? 10\r\n119\tCHS\r\n120\tX<>Y\r\n121\tFS? 10\r\n122\tCHS\r\n123\tST+ T\r\n124\tRDN\r\n125\t+\r\n126\tGTO 03\t\t; copy (x + y.j) to complex stack, and return\r\n\r\n; COMPLEX MULTIPLICATION AND DIVISION\r\n;\r\n;     Z2 * Z1 = (re1 + j.im1) * (re2 + j.im2) =\r\n;             = (re1.re2 - im1.im2 ) + j.(im1.re1 + re1.im2)\r\n;\r\n;     Z2 \/ Z1 = Z2 * 1\/Z1\r\n\r\n127\tLBL 81\t\t; [C\/] operation\r\n128\tSF 10\r\n129\tLBL 71\t\t; [C*] operation\r\n\r\n130\tXEQ 07\t\t; get two operands, as (x + j.y) and (z + j.t)\r\n131\tFS? 10\t\t; if division\r\n132\tXEQ 31\t\t;   then compute (x + j.y) = 1 \/ (x + j.y)\r\n133\tXEQ 00\t\t; compute (x + j.y) * ( z + j.t)\r\n134\tGTO 03\t\t; copy (x + y.j) to complex stack, and return\r\n\r\n; COMPLEX POWER OF A COMPLEX NUMBER\r\n;\r\n;           (x+y.j)      z    -t.phi1    j.(z.phi1 + t.ln(r1))\r\n;     (z+t.j)       =  r1  . e        . e\r\n;\r\n;   where:\r\n;         r1   = sqrt(x^2+y^2)\r\n;         phi1 = .... x + y.j ....????\r\n\r\n135\tLBL 17\t\t; [Z2^Z1] operation\r\n\r\n136\tXEQ 07\t\t; get two operands, as (x + j.y) and (z + j.t)\r\n137\tR^\r\n138\tR^\r\n139\tRAD\r\n140\tR-P\r\n141\tLN\r\n142\tXEQ 00\t\t; compute (x + j.y) * ( z + j.t)\r\n143\tE^X\r\n144\tP-R\r\n145\tGTO 03\t\t; copy (x + y.j) to complex stack, and return\r\n\r\n; COMPLEX PARALLEL CIRCUIT, useful in network theory\r\n;\r\n;            Z1 . Z2\r\n; Z1 \/\/ Z2 = -------    {for |Z1+Z2| <> 0}\r\n;            Z1 + Z2\r\n\r\n146\tLBL 32\t\t; [CPAR] operation\r\n147\tXEQ 07\t\t; get two operands, as (x + j.y) and (z + j.t)\r\n148\tXEQ 31\t\t; compute 1 \/ ( x + j.y)\r\n149\tR^\r\n150\tR^\r\n151\tXEQ 31\t\t; compute 1 \/ ( x + j.y)\r\n152\tX<>Y\r\n153\tST+ T\r\n154\tRDN\r\n155\t+\r\n156\tXEQ 31\t\t; compute 1 \/ ( x + j.y)\r\n\r\n; REPLACE Z1 with (x + y.j) ON COMPLEX STACK\r\n\r\n157\tLBL 03\t    \t; [PRGM] keycode\r\n158\tDEG\t\t; switch to DEG mode\r\n159\tSTO 03\r\n160\tX<>Y\r\n161\tSTO 04\r\n162\tX<>Y\r\n163\tRTN\r\n\r\n; MULTIPLY TWO COMPLEX NUMBERS subroutine\r\n;\r\n;     (x + y.j) * (z + t.j) = (x + j.y) * (z + j.im2) =\r\n;                           = (x.z - y.t ) + j.(y.x + x.t)\r\n\r\n164\tLBL 00\r\n165\tSTO L\r\n166\tR^\r\n167\tST* L\r\n168\tX<> Z\r\n169\tST* Z\r\n170\tR^\r\n171\tST* Y\r\n172\tST* Z\r\n173\tX<> L\r\n174\t+\r\n175\tX<> Z\r\n176\t-\r\n177\tRTN\r\n\r\n; COMPLEX COMMON (base 10) and NATURAL (base e) LOGARITHM\r\n;\r\n;     ln(x + y.j) = ln(r) + j.phi\r\n;\r\n;     Z1\r\n;       log(Z2) = ln(Z2) \/ ln(Z1)\r\n\r\n178\tLBL 14\t\t; [LOG(Z)] operation\r\n179\tXEQ 08\t\t; get operand, as (x + j.y) and update LASTZ\r\n180\tLN  \t\t; x=ln(M1), y=phi1\r\n181\tGTO 00\r\n\r\n182\tLBL 15\t\t; [LN(Z)] operation\r\n183\tXEQ 09\t\t; push (x + y.j) onto complex stack and update LASTZ\r\n184\t E\t\t; x=1\r\n\r\n185\tLBL 00\r\n186\tRDN\r\n187\tRAD\r\n188\tR-P\r\n189\tLN\r\n190\tR^\r\n191\tST\/ Z\r\n192\t\/\r\n193\tGTO 03\t\t; copy (x + y.j) to complex stack, and return\r\n\r\n; COMPLEX COMMON (base 10) and NATURAL (base e) EXPONENTIAL\r\n;\r\n;     (x + j.y)    x              x\r\n;    e          = e .sin(y) + j.e .cos(y)\r\n\r\n194\tLBL 19\t\t; [n^Z] operation\r\n195\tXEQ 08\t\t; get operand, as (x + j.y) and update LASTZ\r\n196\tLN\r\n197\tGTO 00\t\t; reuse part of  [E^Z] operation\r\n\r\n198\tLBL 20\t\t; [E^Z] operation\r\n199\tXEQ 09\t\t; push (x + y.j) onto complex stack and update LASTZ\r\n200\t E\r\n\r\n201\tLBL 00\r\n202\tST* Z\r\n203\t*\r\n204\tE^X\r\n205\tRAD\r\n206\tP-R\r\n207\tGTO 03\t\t; copy (x + y.j) to complex stack, and return\r\n\r\n; COMPLEX EXPONENTIATION WITH REAL EXPONENT n\r\n\r\n208\tLBL 18\t\t; [Z^n] operation\r\n\r\n209\tXEQ 08\t\t; get operand, as (x + j.y) and update LASTZ\r\n210\tRDN\r\n211\tR-P\r\n212\tR^\r\n213\tST* Z\r\n214\tY^X\r\n215\tP-R\r\n216\tGTO 03\t\t; copy (x + y.j) to complex stack, and return\r\n\r\n; COMPLEX ROOT OF REAL NUMBER n\r\n;        __\r\n;     Z1\/         1\/Z1\r\n;     \\\/ Z2   = Z2\r\n;        __\r\n;     n \/        1\/n   j.(phi\/n)\r\n;     \\\/ Z    = M   . e\r\n\r\n217\tLBL 13\t\t; [Z^1\/n] operation\r\n\r\n218\tXEQ 08\t\t; get operand, as (x + j.y) and update LASTZ\r\n219\tRDN\r\n220\tR-P\r\n221\tR^\r\n222\t1\/X\r\n223\tY^X\r\n224\t360\r\n225\tR^\r\n226\tST\/ T\r\n227\tST\/ Y\r\n228\tR^\r\n229\tR^\r\n230\tLBL 05\r\n231\tFC? 00\r\n232\tP-R\r\n233\tXEQ 10\t\t; display complex number (x + y.j)\r\n234\tAON\r\n235\tSTOP\r\n236\tFC? 00\r\n237\tR-P\r\n238\tR^\r\n239\tST+ Z\r\n240\tRDN\r\n241\tDSE Z\r\n242\tGTO 05\t\t; loop back to LBL 05\r\n243\tP-R\r\n244\tAOFF\r\n245\tGTO 03\t\t; copy (x + y.j) to complex stack, and return\r\n\r\n; COMPLEX SINE, COSECANT, COSINE AND SECANT\r\n;\r\n;     sin( x + j.y) = sin(x).cosh(y) + j.cos(x).sinh(y)\r\n;     cos( x + j.y) = cos(x).cosh(y) - j.sin(x).sinh(y)\r\n;     sinh(x + j.y) = cos(y).sinh(x) + j.sin(y).cosh(x)\r\n;     cosh(x + j.y) = cos(y).cosh(x) + j.sin(y).sinh(x)\r\n;     csc(x + j.y)  = 1 \/ sin( x + j.y)\r\n;     sec(x + j.y)  = 1 \/ cos( x + j.y)\r\n;     csch(x + j.y) = 1 \/ sinh(x + j.y)\r\n;     sech(x + j.y) = 1 \/ cosh(x + j.y)\r\n;\r\n; Flags used:\r\n;     flag 04, indicates [HYP]\r\n;     flag 10, indicates [SIN], otherwise [COS]\r\n;     flag 14, indicates inverse operation (CSC and COS, aka SIN^-1 and COS^-1)\r\n;\r\n; Reference:\r\n;     https:\/\/en.wikipedia.org\/wiki\/Complex_number#Complex_analysis\r\n\r\n246\tLBL 28\t\t; [CSC(Z)] operation\r\n247\tSF 14\r\n\r\n248\tLBL 23\t\t; [SIN(Z)] operation\r\n249\tSF 10\r\n\r\n250\tLBL 29\t\t; [SEC(Z)] operation\r\n251\tFC? 10\r\n252\tSF 14\r\n\r\n253\tLBL 24\t\t; [COS(Z)] operation\r\n\r\n254\tXEQ 09\t\t; push (x + y.j) onto complex stack and update LASTZ\r\n255\tFS?C 03\t\t; ARC?\r\n256\tGTO 13\r\n257\tXEQ 00\t\t; calculate cos\/sin\/cosh\/sinh\r\n258\tST* T\r\n259\tRDN\r\n260\t*\r\n261\tCHS\r\n262\tFC? 04\t\t; HYP?\r\n263\tFS? 10\t\t; SIN?\r\n264\tCHS\r\n265\tFC?C 04\t\t; HYP?\r\n266\tFC? 10\t\t; COS?\r\n267\tX<>Y\r\n268\tFS?C 14\t\t; inverse operation?\r\n269\tXEQ 31\t\t;   then compute Z1 = 1 \/ Z1\r\n270\tGTO 03\t\t; copy (x + y.j) to complex stack, and return\r\n\r\n; COMPLEX TANGENT AND COTANGENT, doesn't support ARC or HYP variations\r\n;\r\n;     tan(x + j.y) = sin(2.x)  \/ ( cosh(2.y) + cos(2.x) ) +\r\n;                    sinh(2.y) \/ ( cosh(2.y) + cos(2.x) ) . j\r\n;     cot(Z) = 1 \/ tan(Z)\r\n;\r\n; Flags used:\r\n;     F03 indicates [ARC]\r\n;     F04 indicates [HYP]\r\n;     F14 indicates inverse operation (COT aka TAN^-1]\r\n\r\n271\tLBL 30\t\t; [COT(Z)] operation\r\n272\tSF 14\r\n273\tLBL 25\t\t; [TAN(Z)] operation\r\n274\tFS?C 03\t\t; ARC?\r\n275\tGTO 02\t\t;   UNSUPPORTED, jump back to main routine\r\n276\tFS?C 04\t\t; HYP?\r\n277\tGTO 02\t\t;   UNSUPPORTED, jump back to main routine\r\n278\tXEQ 09\t\t; push (x + y.j) onto complex stack and update LASTZ\r\n279\t2\t\t; multiply x and y by 2\r\n280\tST* Z\r\n281\t*\r\n282\tXEQ 00\t\t; calculate cos\/sin\/cosh\/sinh (F04=0, F10=0)\r\n283\tR^\r\n284\t+\r\n285\tST\/ Z\r\n286\t\/   \t\t; answers is now as (x + y.j)\r\n287\tFS?C 14\t\t; inverse operation?\r\n288\tXEQ 31\t\t;   then compute Z1 = 1 \/ Z1\r\n289\tGTO 03\t\t; copy (x + y.j) to complex stack, and return\r\n\r\n; TRIGONOMIC OPERATIONS HELPER subroutine\r\n;\r\n; Call with:\r\n;   complex number on the stack as (x + y.j).\r\n;   F04 indicates [HYP]\r\n;   F10 indicates [SIN], otherwise [COS]\r\n;\r\n; This operation returns:\r\n;\r\n;           | [HYP]    [HYP]\r\n;\t    | [SIN]    [COS]\t[SIN]\t[COS]\r\n;     ------+----------------------------------\r\n; re  y-reg | sin(y)   sin(y)   sin(x)  sin(x)\r\n; re  z-reg | cosh(x)  sinh(x)  cosh(y) sinh(y)\r\n;     ------+----------------------------------\r\n; im  x-reg | cos(y)   cos(y)   cos(x)  cos(x)\r\n; im  t-reg | sinh(x)  cosh(x)  sinh(y) cosh(y)\r\n;\r\n;            x     -x      2.x\r\n;           e  -  e       e    -  1                    1\r\n; sinh(x) = ---------  =  ---------  ,    csch(x) = -------\r\n;                              x                    sinh(x)\r\n;              2            2.e\r\n;\r\n;            x     -x      2.x\r\n;           e  +  e       e    +  1                   1\r\n; cosh(x) = ---------  =  ---------  ,    sech(x) = -------\r\n;                              x                    cosh(x)\r\n;               2           2.e\r\n; Reference:\r\n;     https:\/\/en.wikipedia.org\/wiki\/Hyperbolic_trig_operations\r\n\r\n290\tLBL 00\r\n291\tFS? 04\t\t; HYP?\r\n292\tX<>Y\t\t;\r\n293\t2\r\n294\tRCL Z\r\n295\tST+ X\r\n296\tE^X-1\r\n297\tST+ Y\r\n298\tR^\r\n299\tE^X\r\n300\tST+ X\r\n301\tST\/ Z\r\n302\t\/\r\n303\tFS? 10\t\t; SIN? (not COS)\r\n304\tX<>Y\t\t;\r\n305\tR^\r\n306\tRAD\r\n307\tSIN\r\n308\tR^\r\n309\tCOS\r\n310\tRTN\r\n\r\n; INVERSE TRIGONOMIC OPERATIONS, ARC and HYP-ARC\r\n;\r\n;     arcsin(x + y.j) = arcsin(b) + j.sign(y).ln(a + sqrt(a^2-1)\r\n;     arccos(x + y.j) = arccos(b) - j.sign(y).ln(a + sqrt(a^2-1))\r\n;     arccsc(Z)  =    arcsin(1\/Z)\r\n;     arcsec(Z)  =    arccos(1\/Z)\r\n;     arcsinh(Z) = -j.arcsin(j.Z)\r\n;     arccosh(Z) =  j.arccos(Z)\r\n;     arccsch(Z) =  j.arccsc(j.Z)\r\n;     arcsech(Z) =  j.arcsec(Z)\r\n;   where\r\n;     a = ( sqrt( (x+1)^2 + y^2 ) + sqrt( (x-1)^2 + y^2) ) \/ 2\r\n;     b = ( sqrt( (x+1)^2 + y^2 ) - sqrt( (x-1)^2 + y^2) ) \/ 2\r\n;     sign(y) returns 1 when y>=0, otherwise returns -1\r\n;\r\n; Flags used:\r\n;     F04 indicates [HYP]\r\n;     F10 indicates [SIN], otherwise [COS]\r\n;     F14 indicates inverse operation (CSC and COS, aka SIN^-1 and COS^-1]\r\n;\r\n; Reference:\r\n;     https:\/\/en.wikipedia.org\/wiki\/Inverse_trigonometric_operation\r\n\r\n311\tLBL 13\r\n312\tFS?C 14\t\t; inverse operation?\r\n313\tXEQ 31\t\t; compute Z1 = 1 \/ Z1\r\n314\tFS? 04\t\t; HYP flag\r\n315\tFC? 10\r\n316\tGTO 00\r\n317\tX<>Y\r\n318\tCHS\r\n319\tLBL 00\t\t; entered with Z1 as (x + y.j)\r\n320\tRCL X\r\n321\t E\r\n322\tST- Z\r\n323\t+\r\n324\tX^2\r\n325\tX<>Y\r\n326\tX^2\r\n327\tX<> Z\r\n328\tX^2\r\n329\tST+ Z\r\n330\t+\r\n331\tSQRT\r\n332\tSTO Z\r\n333\tX<>Y\r\n334\tSQRT\r\n335\tST- Z\r\n336\t+\r\n337\t2\r\n338\tST\/ Z\r\n339\t\/   \t\t; X holds a;  Y holds b; Z holds y\r\n340\tENTER^\r\n341\tX^2\r\n342\tSIGN\r\n343\tST- L\r\n344\tX<> L\r\n345\tSQRT\r\n346\t+\r\n347\tLN\r\n348\tR^\r\n349\tSIGN\r\n350\t*\r\n351\tFC? 10\r\n352\tCHS\r\n353\tX<>Y\r\n354\tRAD\r\n355\tFS? 10\r\n356\tASIN\r\n357\tFC? 10\r\n358\tACOS\t\t; Z1 (x + y.j) now holds the answer to simple ARCSIN or ARCCOS\r\n359\tFC?C 04\r\n360\tGTO 03\t\t; we're done for non-HYP operations;\r\n361\tFS? 10\t\t; proceed for for HYP or inverse-HYP\r\n362\tCHS\r\n363\tX<>Y\r\n364\tFC? 10\r\n365\tCHS\r\n366\tGTO 03\t\t; copy (x + y.j) to complex stack, and return\r\n\r\n; VIEW COMPLEX NUMBER Zn\r\n\r\n367\tLBL 89\t\t; [VIEWZn] operation\r\n368\tRCL 00\r\n369\tX<Y?\t\t; if n > complex stack depth, recall Z1 and return\r\n370\tGTO 14\t\t; get (x + y.j) from complex stack, and return\r\n371\tSIGN\r\n372\t+\r\n373\tST+ X\r\n374\tSIGN\r\n375\tCLX\r\n376\tRCL IND L\t; recall imaginary part of Zn\r\n377\tDSE L\r\n378\tRCL IND L\t; recall real part of Zn\r\n379\tFS? 00\t\t; if notation selected\r\n380\tR-P \t\t;   then convert to polar notation\r\n381\tXEQ 10\t\t; display complex number (x + y.j)\r\n382\tPSE \t\t; pause, but allow number input\r\n383\tGTO 14\t\t; get (x + y.j) from complex stack, and return\r\n\r\n; EXCHANGE COMPLEX STACK REGISTERS\r\n\r\n384\tLBL 21\t\t; [Z1<>Z2] operation\r\n385\tXEQ 04\t\t; push (x + y.j) onto complex stack\r\n386\t2\r\n387\tLBL 26\t\t; [Z1<>Zn] operation\r\n388\tRCL 00\r\n389\tX<Y?\r\n390\tGTO 14\t\t; get (x + y.j) from complex stack, and return\r\n391\tX<>Y\r\n392\tST+ X\r\n393\t1.003002\t; X register holds 1.003002; Y register holds 2.n,\r\n394\tCF 02\t\t; no \"no stack lift\"\r\n395\tGTO 00\t\t; perform register swap and return\r\n\r\n; COMPLEX STACK ROLL, up or down\r\n;\r\n; Does not roll around\r\n; Uses block rotate trick form PPC Journal V10N3p15a\r\n\r\n396\tLBL 22\t\t; [CR^] operation\r\n397\tSF 10\r\n398\tLBL 27\t\t; [CRDN] operation\r\n\r\n399\tXEQ 04\t\t; push (x + y.j) onto complex stack\r\n400\t3\r\n401\tENTER^\r\n402\t5\r\n403\tFS? 10\t\t; CR^?\r\n404\tX<>Y\r\n405\tRCL 00\t\t; complex stack depth (csdepth)\r\n406\tDSE X\r\n407\tST+ X\r\n408\t E3\r\n409\tST\/ Z\r\n410\tX^2\r\n411\t\/\r\n412\t+\t\t; for CRDN\r\n413\tLBL 00\r\n414\t+\r\n415\tREGSWAP\t\t; register swap for sss.dddnnn\r\n\r\n; GET (x + y.j) FROM COMPLEX STACK\r\n\r\n416\tLBL 14\r\n417\tRCL 04\t\t; imaginary part of Z1\r\n418\tRCL 03\t\t; real part of Z1\r\n419\tRTN\r\n\r\n; COMPLEX 1\/Z1\r\n;\r\n; Formula:\r\n;      1             x                 y\r\n;    -------  =  ---------  -  j . ---------\r\n;    x + y.j     x^2 + y^2         x^2 + y^2\r\n;\r\n; doesn't disturb Z and T\r\n420\tLBL 31\r\n421\tX^2\r\n422\tX<>Y\r\n423\tSTO M\r\n424\tST* X\r\n425\tST+ Y\r\n426\tX<> M\r\n427\tCHS\r\n428\tX<>Y\r\n429\tST\/ Y\r\n430\tST\/ L\r\n431\tX<> L\r\n432\tRTN\r\n\r\n; GET TWO OPERANDS as (x + j.y) and (z + j.t)\r\n; 1st operand is from keyboard, otherwise from Z1\r\n; stack management subroutine for operations with two complex number operands\r\n\r\n433\tLBL 07\r\n434\tXEQ 06\t\t; get one operand (x + y.j) from keyboard input\r\n;  otherwise from Z1 on the complex stack\r\n435\tFC?C 02\r\n436\tFC? 22\t\t; if \"no stack lift\" or no \"input from keyboard\"\r\n437\tXEQ 12\t\t;   then move complex stack down\r\n438\tRCL 04\t\t; get operand (z + t.j) from Z1 on the complex stack\r\n439\tRCL 03\r\n440\tR^\r\n441\tR^\r\n442\tGTO 00\r\n\r\n; GET OPERAND, as (x + j.y) and UPDATE LASTZ\r\n; stack management subroutine for operations with one complex and one real number operand\r\n\r\n443\tLBL 08\t   \t; called with n in register X\r\n444\tFS?C 02\t\t; if \"no stack lift\"\r\n445\tXEQ 12\t\t;   then move complex stack down, Z1 < Z2 < Z3 < Z4 < Z5 < Z6\r\n446\tRCL 04\t\t; copy Z1 to LASTZ\r\n447\tSTO 02\r\n448\tRCL 03\r\n449\tSTO 01\r\n450\tRCL Z\t\t; n in register X, complex operand as (y + z.j)\r\n451\tRTN\r\n\r\n; PUSH (x + y.j) ONTO COMPLEX STACK and UPDATE LASTZ\r\n; stack management subroutine for operations with one complex number operand\r\n\r\n452\tLBL 09\r\n453\tXEQ 04\t\t; push (x + y.j) onto complex stack\r\n454\tLBL 00\r\n455\tSTO 01\t\t; copy to LASTZ1\r\n456\tX<>Y\r\n457\tSTO 02\r\n458\tX<>Y\r\n459\tRTN\r\n\r\n; COMPLEX ALPHA\/ALPHA ROUTINE\r\n\r\n460\tLBL 04\t      \t; [CVIEW] key code [ALPHA]\r\n461\tFC?C 02\r\n462\tFC? 22\r\n463\tFS? 30\t\t; if both \"no stack lift\" and \"keyboard input\"\r\n464\tXEQ 11\t\t;   then move complex stack up, Z1 > Z2 > Z3 > Z4 > Z5 > Z6\r\n\r\n465\tXEQ 06\t\t; get one operand\r\n466\tSTO 03\r\n467\tX<>Y\r\n468\tSTO 04\r\n469\tX<>Y\r\n470\tRTN\r\n\r\n; GET ONE OPERAND (x + y.j)\r\n; from keyboard input, otherwise from Z1 on the complex stack \r\n\r\n471\tLBL 06\r\n472\tFS? 00\t\t; if in polar mode, then convert it to Rect\r\n473\tFC? 22\r\n474\tFS? 30\r\n475\tP-R\r\n476\tFS? 22\t\t; keyboard input?\r\n477\tRTN\r\n478\tRCL 04\r\n479\tRCL 03\r\n480\tRTN\r\n\r\n; DISPLAY\r\n; in rectangular mode \"x + y.j\", or in polar mode \"x <y\" with the\r\n; angle in degrees\r\n; subroutine that views both parts of the complex number in X and Y in\r\n; condensed format in the display, without disturbing Z, T or the display\r\n; mode.  ENG 2 was chosen because, to display complex numbers in analog\r\n; electronics.\r\n\r\n481\tLBL 10\t\t; Z1 = x + j.y\r\n482\tSIGN\t\t; save X in LASTX\r\n483\tRDN\r\n484\tCLA\r\n485\tRCLFLAG\t\t; save flags\r\n486\tENG 2\r\n487\tARCL L\r\n488\tRDN\r\n489\tFS? 00\t\t; in Rectangular notation append real part,\r\n490\tGTO 00\t\t; and '+' sign if imaginary part is positive\r\n491\tX<0?\r\n492\tGTO 00\r\n493\t>\"+\"\r\n494\tLBL 00\r\n495\tR^\r\n496\tFS? 00\t\t; for Polar notation, append angle ('<') sign\r\n497\t>\" <\"\r\n498\tARCL Y\r\n499\tFC? 00\r\n500\t>\"J\"\t\t; in Rectangular notation append 'J' char\r\n501\tAVIEW\r\n502\tSTOFLAG\t\t; restore flags\r\n503\tX<> L\t\t; restore X from LASTX\r\n504\tRTN\r\n\r\n; ROLL THE COMPLEX STACK, by one position up or down\r\n; subroutine to shift the stack up or down by one complex register\r\n;\r\n; Does not roll around like RDN or R^\r\n; Does not enter or retrieve data.\r\n;\r\n; Example:\r\n;                  | stack lift | stack drop\r\n;    --------------+------------+------------\r\n;    Z6    6 + 6j  |   5 + 5j   |   6 + 6j\r\n;    Z5    5 + 5j  |   4 + 4j   |   6 + 6j\r\n;    Z4    4 + 4j  |   3 + 3j   |   5 + 5j\r\n;    Z3    3 + 3j  |   2 + 2j   |   4 + 4j\r\n;    Z2    2 + 2j  |   1 + 1j   |   3 + 3j\r\n;    Z1    1 + 1j  |   1 + 1j   |   2 + 2j\r\n\r\n505\tLBL 11\t\t; stack lift, Z1 > Z2 > Z3 > Z4 > Z5 > Z6\r\n506\t3.005\t\t;   typically when a new number is moved into Z1\r\n507\tGTO 00\r\n508\tLBL 12\t\t; stack drop, Z1 < Z2 < Z3 < Z4 < Z5 < Z6\r\n509\t5.003\t\t;   typically when a operation combines Z1 and Z2\r\n510\tLBL 00\r\n511\tSIGN\r\n512\tRCL 00\t\t; complex stack depth (csdepth)\r\n513\tX<>Y\r\n514\tST- Y\r\n515\tRDN\r\n516\tST+ X\r\n517\t E6\r\n518\tST\/ Y\r\n519\tX<> L\r\n520\t+\t\t; register X is in sss.dddnnn format\r\n521\tREGMOVE\t\t; copies 2*(csdepth-1) registers from sss to ddd\r\n522\tRDN\r\n523\tEND<\/pre><\/div>\r\n\r\n<h2>\r\n    Operations and stack\r\n<\/h2>\r\n<p>\r\n    The table shows the key assignments with their effect on the complex stack.\r\n\r\n    <div class=\"flex-container\">\r\n        <table borders=\"1\">\r\n            <tr>\r\n                <td><em>operation<\/em><\/td>\r\n                <td><em>normal key<\/em><\/td>\r\n                <td><em>description<\/em><\/td>\r\n                <td><em>stack<\/em><\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td><span class=\"hp41-cikey\">COMPLEX<\/span><\/td>\r\n                <td><span class=\"hp41-key\">R\/S<\/span><\/td>\r\n                <td>Prefix for Complex operations.<\/td>\r\n                <td>N<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td><span class=\"hp41-cnkey\">INIT<\/span><\/td>\r\n                <td><span class=\"hp41-nkey\">ON<\/span><\/td>\r\n                <td>Reinitialize, but do not clear stack.<\/td>\r\n                <td> <\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td><span class=\"hp41-ckey\">+<\/span><\/td>\r\n                <td><span class=\"hp41-key\">+<\/span><\/td>\r\n                <td>Adds Z1 to Z2.<\/td>\r\n                <td>E,L,\u2193<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td><span class=\"hp41-ckey\">\/<\/span><\/td>\r\n                <td><span class=\"hp41-key\">*<\/span><\/td>\r\n                <td>Multiplies Z2 by Z1.<\/td>\r\n                <td>E,L,\u2193<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td><span class=\"hp41-ckey\">\/<\/span><\/td>\r\n                <td><span class=\"hp41-key\">\/<\/span><\/td>\r\n                <td>Divides Z2 by Z1.<\/td>\r\n                <td>E,L,\u2193<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td><span class=\"hp41-ckey\">\/\/<\/span><\/td>\r\n                <td><span class=\"hp41-key\">XEQ<\/span><\/td>\r\n                <td>Take Z1 and Z2 parallel (network theory).<\/td>\r\n                <td>E,L,\u2193<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td><span class=\"hp41-ckey\">CHS<\/span><\/td>\r\n                <td><span class=\"hp41-key\">CHS<\/span><\/td>\r\n                <td>Negate Z1.<\/td>\r\n                <td>E<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td><span class=\"hp41-ckey\">CON<\/span><\/td>\r\n                <td><span class=\"hp41-key\">ISG<\/span><\/td>\r\n                <td>Complement\/conjugate of Z1.<\/td>\r\n                <td>E<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td><span class=\"hp41-ckey\">1\/Z<\/span><\/td>\r\n                <td><span class=\"hp41-key\">1\/X<\/span><\/td>\r\n                <td>Reciprocal of Z1.<\/td>\r\n                <td>E<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-ckey\">Z2<sup>Z1<\/sup><\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-key\">y<sup>x<\/sup><\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">Z2 to the power Z1.<\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">E,L,\u2193<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-ckey\">LOG<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-key\">LOG<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">Base 10 logarithm of Z1.<\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">E,L<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-ckey\">LN<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-key\">LN<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">Natural logarithm of Z1.<\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">E,L<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-ckey\">e<sup>Z<\/sup><\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-key\">e<sup>x<\/sup><\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">e to the power Z1.<\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">E,L<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-ckey\">Z<sup>n<\/sup><\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-key\">x<sup>2<\/sup><\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">Z1 to the real number power n.<\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">E,L<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-ckey\">Z<sup>1\/n<\/sup><\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-key\">\u221ax<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">All n<sup>th<\/sup> roots of Z1.<\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">E,L<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-ckey\">n<sup>Z<\/sup><\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-key\">10<sup>x<\/sup><\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">Real number N to the power Z1.<\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">E,L<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-ckey\">RECT<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-key\">P\u2192R<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">Sets the input\/output mode to rectangular.<\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">N<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-ckey\">POL<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-key\">R\u2192P<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">Sets the input\/output mode to polar.<\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">N<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-ckey\">ENTER<span class=\"hp41-cup-arrow\"> <\/span><\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-key\">ENTER<span class=\"hp41-up-arrow\"> <\/span><\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">Lifts the stack and disables stack left.<\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">D,\u2191,(\u2191)<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-cnkey\">VIEW<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-nkey\">ALPHA<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">Enters a new complex number on the stack without lifting the complex stack (compare to the use of <span class=\"hp41-nkey\">ALPHA<\/span>\/<span class=\"hp41-nkey\">ALPHA<\/span> to terminate digit entry without using <span class=\"hp41-key\">ENTER<span class=\"hp41-up-arrow\"> <\/span><\/span>. Recalls Z1 if flag 22 is clear.<\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">E,(\u2191)<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-ckey\">CLZ1<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-key\">CLX<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">Clears Z1 and disables stack lift.<\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">D<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-ckey\">CLST<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-key\">RTN<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">Clears the complex stack and the normal stack (LASTZ1 is preserved).<\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">E<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-ckey\">LASTZ1<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-key\">LASTX<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">Recalls LASTZ1 onto the stack.<\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">E,(\u2191)<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-ckey\">VIEWZn<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-key\">VIEW<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">Views the contents of Zn. Specify 0 to view LASTZ1.<\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">N<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-ckey\">R<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-key\">RDN<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">Rolls the stack down by one complex register.<\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">E<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-ckey\">R<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-key\">R<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">Rolls the stack up by one complex register.<\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">E<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-ckey\">Z1<span class=\"hp41-cxy\"> <\/span>Z2<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-key\">X<span class=\"hp41-xy\"> <\/span>Y<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">Exchanges Z1 with Z2.<\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">E<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-ckey\">Z1<span class=\"hp41-cxy\"> <\/span>Zn<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-key\">CL\u2211<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">Exchanges Z1 with Zn. Specify 0 for LASTZ1<\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">E<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-ckey\">ARC<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-key\">\u2211+<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">ARC prefix.<\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">N<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-ckey\">HYP<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-key\">\u2211-<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">HYP prefix.<\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">N<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-ckey\">SIN<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-key\">SIN<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">Sine of Z1.<\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">E,L<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-ckey\">COS<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-key\">COS<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">Cosine of Z1.<\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">E,L<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-ckey\">TAN<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-key\">TAN<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">Tangent of Z1.<\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">E,L<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-ckey\">CSC<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-key\">SIN<sup>-1<\/sup><\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">Cosecant of Z1<\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">E,L<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-ckey\">SEC<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-key\">COS<sup>-1<\/sup><\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">Secant of Z1<\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">E,L<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-ckey\">COT<\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\"><span class=\"hp41-key\">TAN<sup>-1<\/sup><\/span><\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">Cotangent of Z1<\/td>\r\n                <td colspan=\"1\" rowspan=\"1\">E,L<\/td>\r\n            <\/tr>\r\n        <\/table>\r\n    <\/div>\r\n<\/p>\r\n<p>\r\n    The prefixes ARC and HYP provide a rich set of trigonometric and hyperbolic functions.\r\n\r\n    <div class=\"flex-container\">\r\n        <table borders=\"0\">\r\n            <tr>\r\n                <td>N<\/td>\r\n                <td>=<\/td>\r\n                <td>neutral stack lift status<\/td>\r\n                <td> <\/td>\r\n                <td>\u2191<\/td>\r\n                <td>=<\/td>\r\n                <td>stack lifts<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td>D<\/td>\r\n                <td>=<\/td>\r\n                <td>disables stack lift<\/td>\r\n                <td> <\/td>\r\n                <td>\u2193<\/td>\r\n                <td>=<\/td>\r\n                <td>stack drops<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td>E<\/td>\r\n                <td>=<\/td>\r\n                <td>enables stack lift<\/td>\r\n                <td> <\/td>\r\n                <td>(\u2191)<\/td>\r\n                <td>=<\/td>\r\n                <td>stack lift if enabled<\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td>L<\/td>\r\n                <td>=<\/td>\r\n                <td>Z1 saved in LASTZ1<\/td>\r\n                <td> <\/td>\r\n                <td> <\/td>\r\n                <td> <\/td>\r\n                <td> <\/td>\r\n            <\/tr>\r\n        <\/table>\r\n    <\/div>\r\n<\/p>\r\n\r\n<h2>\r\n    References\r\n<\/h2>\r\n<p>\r\n    <div class=\"flex-container math\">\r\n        <table>\r\n            <tr>\r\n                <td valign=\"top\"><span style=\"color: #333333; font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;\"><span style=\"font-size: 13px;\">[1]<\/span><\/span><\/td>\r\n                <td id=\"\" dir=\"\" lang=\"\" colspan=\"1\" rowspan=\"1\" valign=\"top\"><span style=\"color: #333333; font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;\"><\/span><\/td>\r\n                <td valign=\"top\"><span style=\"color: #333333; font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;\"><span style=\"font-size: 13px;\">COMPLEX ARITHMETIC\r\n                    Frans de Vries, May 1985<br >\r\n                    <a href=\"http:\/\/www.hp41.org\/LibView.cfm?Command=Image&#038;ItemID=229&#038;FileID=6443\">PPC Journal V12N5, page 4-9<\/a><\/span><\/span><\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td valign=\"top\"><span style=\"color: #333333; font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;\"><span style=\"font-size: 13px;\">[2]<\/span><\/span><\/td>\r\n                <td id=\"\" dir=\"\" lang=\"\" colspan=\"1\" rowspan=\"1\" valign=\"top\"><span style=\"color: #333333; font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;\"><\/span><\/td>\r\n                <td valign=\"top\"><span style=\"color: #333333; font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;\"><span style=\"font-size: 13px;\">SCIENTIFIC ANALYSIS IN THE POCKET CALCULATOR, chapter 3-8, appendix 4<br >\r\n                Jon M. Smith, 1975<br >\r\n                New York, John Wiley &#038; sons<\/span><\/span><\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td valign=\"top\"><span style=\"color: #333333; font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;\"><span style=\"font-size: 13px;\">[3]<\/span><\/span><\/td>\r\n                <td id=\"\" dir=\"\" lang=\"\" colspan=\"1\" rowspan=\"1\" valign=\"top\"><span style=\"color: #333333; font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;\"><\/span><\/td>\r\n                <td valign=\"top\"><span style=\"color: #333333; font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;\"><span style=\"font-size: 13px;\">LAPLACE-, FOURIER- EN Z-TRANSFORMATIE, chapter 1<br >\r\n                Ir. A. van der Knaap, 1983<br >\r\n                HTS Dordrecht, the Netherlands<\/span><\/span><\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td valign=\"top\"><span style=\"color: #333333; font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;\"><span style=\"font-size: 13px;\">[4]<\/span><\/span><\/td>\r\n                <td id=\"\" dir=\"\" lang=\"\" colspan=\"1\" rowspan=\"1\" valign=\"top\"><span style=\"color: #333333; font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;\"><\/span><\/td>\r\n                <td valign=\"top\"><span style=\"color: #333333; font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;\"><span style=\"font-size: 13px;\">COMPLEXE REKENWIJZE OP DE STANDAARD HP41CV<br >\r\n                Coert Vonk, 1986<br >\r\n                HP Users Nieuws #8 June 1986 pg. 24-29<\/span><\/span><\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td valign=\"top\"><span style=\"color: #333333; font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;\"><span style=\"font-size: 13px;\">[5]<\/span><\/span><\/td>\r\n                <td id=\"\" dir=\"\" lang=\"\" colspan=\"1\" rowspan=\"1\" valign=\"top\"><span style=\"color: #333333; font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;\"><\/span><\/td>\r\n                <td valign=\"top\"><span style=\"color: #333333; font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;\"><span style=\"font-size: 13px;\">MATHEMATICAL TABLES AND FORMULAS, formula 26 pg. 242<br >\r\n                    R.D. Carmichael and E.R. Smith<br >\r\n                    Dover Publications Inc, New York<\/span><\/span><\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td valign=\"top\"><span style=\"color: #333333; font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;\"><span style=\"font-size: 13px;\">[6]<\/span><\/span><\/td>\r\n                <td id=\"\" dir=\"\" lang=\"\" colspan=\"1\" rowspan=\"1\" valign=\"top\"><span style=\"color: #333333; font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;\"><\/span><\/td>\r\n                <td valign=\"top\"><span style=\"color: #333333; font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;\"><span style=\"font-size: 13px;\">EXTEND YOUR HP-41C, page 558\r\n                Wlodek Mier-Jedrzejowicz, 1986<br >\r\n                <a href=\"https:\/\/www.hpmuseum.org\/software\/swcd.htm\">Synthetix<\/a><\/span><\/span><\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td valign=\"top\"><span style=\"color: #333333; font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;\"><span style=\"font-size: 13px;\">[7]<\/span><\/span><\/td>\r\n                <td id=\"\" dir=\"\" lang=\"\" colspan=\"1\" rowspan=\"1\" valign=\"top\"><span style=\"color: #333333; font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;\"><\/span><\/td>\r\n                <td valign=\"top\"><span style=\"color: #333333; font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;\"><span style=\"font-size: 13px;\">HP-41C FLAGS, PART 1\r\n                <a href=\"http:\/\/www.hpmuseum.net\/pdf\/KeyNotes_1980_Sep_Vol4No3_13pages_OCR.pdf\">HP Key Notes V4N3, 1980<\/a><\/span><\/span><\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td valign=\"top\"><span style=\"color: #333333; font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;\"><span style=\"font-size: 13px;\">[8]<\/span><\/span><\/td>\r\n                <td id=\"\" dir=\"\" lang=\"\" colspan=\"1\" rowspan=\"1\" valign=\"top\"><span style=\"color: #333333; font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;\"><\/span><\/td>\r\n                <td valign=\"top\"><span style=\"color: #333333; font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;\"><span style=\"font-size: 13px;\">COMPLEX FUNCTIONS FOR THE HP-41\r\n                Jean-Marc Baillard, 2004<br >\r\n                <a href=\"https:\/\/www.hpmuseum.org\/software\/41\/41cmpxf.htm\">see article<\/a><\/span><\/span><\/td>\r\n            <\/tr>\r\n            <tr>\r\n                <td id=\"\" dir=\"\" lang=\"\" colspan=\"1\" rowspan=\"1\" valign=\"top\"><span style=\"color: #333333; font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;\"><span style=\"font-size: 13px;\">[9]<\/span><\/span><\/td>\r\n                <td id=\"\" dir=\"\" lang=\"\" colspan=\"1\" rowspan=\"1\" valign=\"top\"><span style=\"color: #333333; font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;\"><\/span><\/td>\r\n                <td id=\"\" dir=\"\" lang=\"\" colspan=\"1\" rowspan=\"1\" valign=\"top\"><span style=\"color: #333333; font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;\"><span style=\"font-size: 13px;\">RUNNING PRGMS IN X-MEMORY<br >\r\n                Philip Karras, April 1982<br >\r\n                <a href=\"http:\/\/www.hp41.org\/LibView.cfm?Command=Image&#038;FileID=5144\">PPC Journal, V9N3, pg.26<\/a><\/span><\/span><\/td>\r\n            <\/tr>\r\n        <\/table>\r\n    <\/div>\r\n<\/p>","protected":false},"excerpt":{"rendered":"Scientific calculator software to introduces complex number operations on the HP-41. Easy to use. Runs in extended memory.","protected":false},"author":41,"featured_media":6617,"comment_status":"open","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":{"inline_featured_image":false,"_mi_skip_tracking":false},"categories":[216],"tags":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v18.6 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Complex numbers on the HP-41 - Coert Vonk<\/title>\n<meta name=\"description\" content=\"Scientific calculator software to introduces complex number operations on the HP-41. Easy to use. Runs in extended memory.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/coertvonk.com\/sw\/hp41\/complex-arithmetic-xmem-4426\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Complex numbers on the HP-41 - Coert Vonk\" \/>\n<meta property=\"og:description\" content=\"Scientific calculator software to introduces complex number operations on the HP-41. Easy to use. Runs in extended memory.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/coertvonk.com\/sw\/hp41\/complex-arithmetic-xmem-4426\" \/>\n<meta property=\"og:site_name\" content=\"Coert Vonk\" \/>\n<meta property=\"article:published_time\" content=\"2012-03-03T19:11:24+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-04-25T23:43:44+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/coertvonk.com\/wp-content\/uploads\/complex-arithmetic-xmem.png\" \/>\n\t<meta property=\"og:image:width\" content=\"300\" \/>\n\t<meta property=\"og:image:height\" content=\"300\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/png\" \/>\n<meta name=\"twitter:card\" content=\"summary\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Coert Vonk\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"8 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/coertvonk.com\/#website\",\"url\":\"https:\/\/coertvonk.com\/\",\"name\":\"Coert Vonk\",\"description\":\"Embedded Software Engineer\",\"publisher\":{\"@id\":\"https:\/\/coertvonk.com\/#\/schema\/person\/5eeda746b43b88312a0621fdc226c70e\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/coertvonk.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/coertvonk.com\/sw\/hp41\/complex-arithmetic-xmem-4426#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/coertvonk.com\/wp-content\/uploads\/complex-arithmetic-xmem.png\",\"contentUrl\":\"https:\/\/coertvonk.com\/wp-content\/uploads\/complex-arithmetic-xmem.png\",\"width\":300,\"height\":300},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/coertvonk.com\/sw\/hp41\/complex-arithmetic-xmem-4426#webpage\",\"url\":\"https:\/\/coertvonk.com\/sw\/hp41\/complex-arithmetic-xmem-4426\",\"name\":\"Complex numbers on the HP-41 - Coert Vonk\",\"isPartOf\":{\"@id\":\"https:\/\/coertvonk.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/coertvonk.com\/sw\/hp41\/complex-arithmetic-xmem-4426#primaryimage\"},\"datePublished\":\"2012-03-03T19:11:24+00:00\",\"dateModified\":\"2022-04-25T23:43:44+00:00\",\"description\":\"Scientific calculator software to introduces complex number operations on the HP-41. Easy to use. Runs in extended memory.\",\"breadcrumb\":{\"@id\":\"https:\/\/coertvonk.com\/sw\/hp41\/complex-arithmetic-xmem-4426#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/coertvonk.com\/sw\/hp41\/complex-arithmetic-xmem-4426\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/coertvonk.com\/sw\/hp41\/complex-arithmetic-xmem-4426#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Vonk Family\",\"item\":\"https:\/\/coertvonk.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Software\",\"item\":\"https:\/\/coertvonk.com\/category\/sw\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"Calculator (HP-41)\",\"item\":\"https:\/\/coertvonk.com\/category\/sw\/hp41\"},{\"@type\":\"ListItem\",\"position\":4,\"name\":\"Complex numbers on the HP-41\"}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/coertvonk.com\/sw\/hp41\/complex-arithmetic-xmem-4426#article\",\"isPartOf\":{\"@id\":\"https:\/\/coertvonk.com\/sw\/hp41\/complex-arithmetic-xmem-4426#webpage\"},\"author\":{\"@id\":\"https:\/\/coertvonk.com\/#\/schema\/person\/5eeda746b43b88312a0621fdc226c70e\"},\"headline\":\"Complex numbers on the HP-41\",\"datePublished\":\"2012-03-03T19:11:24+00:00\",\"dateModified\":\"2022-04-25T23:43:44+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/coertvonk.com\/sw\/hp41\/complex-arithmetic-xmem-4426#webpage\"},\"wordCount\":1546,\"commentCount\":4,\"publisher\":{\"@id\":\"https:\/\/coertvonk.com\/#\/schema\/person\/5eeda746b43b88312a0621fdc226c70e\"},\"image\":{\"@id\":\"https:\/\/coertvonk.com\/sw\/hp41\/complex-arithmetic-xmem-4426#primaryimage\"},\"thumbnailUrl\":\"https:\/\/coertvonk.com\/wp-content\/uploads\/complex-arithmetic-xmem.png\",\"articleSection\":[\"Calculator (HP-41)\"],\"inLanguage\":\"en-US\"},{\"@type\":[\"Person\",\"Organization\"],\"@id\":\"https:\/\/coertvonk.com\/#\/schema\/person\/5eeda746b43b88312a0621fdc226c70e\",\"name\":\"Coert Vonk\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/coertvonk.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"http:\/\/1.gravatar.com\/avatar\/193315b96c6661985694e2ecd91f2996?s=96&d=mm&r=g\",\"contentUrl\":\"http:\/\/1.gravatar.com\/avatar\/193315b96c6661985694e2ecd91f2996?s=96&d=mm&r=g\",\"caption\":\"Coert Vonk\"},\"logo\":{\"@id\":\"https:\/\/coertvonk.com\/#personlogo\"},\"description\":\"Passionately curious and stubbornly persistent. Enjoys to inspire and consult with others to exchange the poetry of logical ideas.\",\"sameAs\":[\"https:\/\/coertvonk.com\"],\"url\":\"http:\/\/coertvonk.com\/author\/cvonk\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Complex numbers on the HP-41 - Coert Vonk","description":"Scientific calculator software to introduces complex number operations on the HP-41. Easy to use. Runs in extended memory.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/coertvonk.com\/sw\/hp41\/complex-arithmetic-xmem-4426","og_locale":"en_US","og_type":"article","og_title":"Complex numbers on the HP-41 - Coert Vonk","og_description":"Scientific calculator software to introduces complex number operations on the HP-41. Easy to use. Runs in extended memory.","og_url":"https:\/\/coertvonk.com\/sw\/hp41\/complex-arithmetic-xmem-4426","og_site_name":"Coert Vonk","article_published_time":"2012-03-03T19:11:24+00:00","article_modified_time":"2022-04-25T23:43:44+00:00","og_image":[{"width":300,"height":300,"url":"https:\/\/coertvonk.com\/wp-content\/uploads\/complex-arithmetic-xmem.png","type":"image\/png"}],"twitter_card":"summary","twitter_misc":{"Written by":"Coert Vonk","Est. reading time":"8 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/coertvonk.com\/#website","url":"https:\/\/coertvonk.com\/","name":"Coert Vonk","description":"Embedded Software Engineer","publisher":{"@id":"https:\/\/coertvonk.com\/#\/schema\/person\/5eeda746b43b88312a0621fdc226c70e"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/coertvonk.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https:\/\/coertvonk.com\/sw\/hp41\/complex-arithmetic-xmem-4426#primaryimage","inLanguage":"en-US","url":"https:\/\/coertvonk.com\/wp-content\/uploads\/complex-arithmetic-xmem.png","contentUrl":"https:\/\/coertvonk.com\/wp-content\/uploads\/complex-arithmetic-xmem.png","width":300,"height":300},{"@type":"WebPage","@id":"https:\/\/coertvonk.com\/sw\/hp41\/complex-arithmetic-xmem-4426#webpage","url":"https:\/\/coertvonk.com\/sw\/hp41\/complex-arithmetic-xmem-4426","name":"Complex numbers on the HP-41 - Coert Vonk","isPartOf":{"@id":"https:\/\/coertvonk.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/coertvonk.com\/sw\/hp41\/complex-arithmetic-xmem-4426#primaryimage"},"datePublished":"2012-03-03T19:11:24+00:00","dateModified":"2022-04-25T23:43:44+00:00","description":"Scientific calculator software to introduces complex number operations on the HP-41. Easy to use. Runs in extended memory.","breadcrumb":{"@id":"https:\/\/coertvonk.com\/sw\/hp41\/complex-arithmetic-xmem-4426#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/coertvonk.com\/sw\/hp41\/complex-arithmetic-xmem-4426"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/coertvonk.com\/sw\/hp41\/complex-arithmetic-xmem-4426#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Vonk Family","item":"https:\/\/coertvonk.com\/"},{"@type":"ListItem","position":2,"name":"Software","item":"https:\/\/coertvonk.com\/category\/sw"},{"@type":"ListItem","position":3,"name":"Calculator (HP-41)","item":"https:\/\/coertvonk.com\/category\/sw\/hp41"},{"@type":"ListItem","position":4,"name":"Complex numbers on the HP-41"}]},{"@type":"Article","@id":"https:\/\/coertvonk.com\/sw\/hp41\/complex-arithmetic-xmem-4426#article","isPartOf":{"@id":"https:\/\/coertvonk.com\/sw\/hp41\/complex-arithmetic-xmem-4426#webpage"},"author":{"@id":"https:\/\/coertvonk.com\/#\/schema\/person\/5eeda746b43b88312a0621fdc226c70e"},"headline":"Complex numbers on the HP-41","datePublished":"2012-03-03T19:11:24+00:00","dateModified":"2022-04-25T23:43:44+00:00","mainEntityOfPage":{"@id":"https:\/\/coertvonk.com\/sw\/hp41\/complex-arithmetic-xmem-4426#webpage"},"wordCount":1546,"commentCount":4,"publisher":{"@id":"https:\/\/coertvonk.com\/#\/schema\/person\/5eeda746b43b88312a0621fdc226c70e"},"image":{"@id":"https:\/\/coertvonk.com\/sw\/hp41\/complex-arithmetic-xmem-4426#primaryimage"},"thumbnailUrl":"https:\/\/coertvonk.com\/wp-content\/uploads\/complex-arithmetic-xmem.png","articleSection":["Calculator (HP-41)"],"inLanguage":"en-US"},{"@type":["Person","Organization"],"@id":"https:\/\/coertvonk.com\/#\/schema\/person\/5eeda746b43b88312a0621fdc226c70e","name":"Coert Vonk","image":{"@type":"ImageObject","@id":"https:\/\/coertvonk.com\/#personlogo","inLanguage":"en-US","url":"http:\/\/1.gravatar.com\/avatar\/193315b96c6661985694e2ecd91f2996?s=96&d=mm&r=g","contentUrl":"http:\/\/1.gravatar.com\/avatar\/193315b96c6661985694e2ecd91f2996?s=96&d=mm&r=g","caption":"Coert Vonk"},"logo":{"@id":"https:\/\/coertvonk.com\/#personlogo"},"description":"Passionately curious and stubbornly persistent. Enjoys to inspire and consult with others to exchange the poetry of logical ideas.","sameAs":["https:\/\/coertvonk.com"],"url":"http:\/\/coertvonk.com\/author\/cvonk"}]}},"_links":{"self":[{"href":"http:\/\/coertvonk.com\/wp-json\/wp\/v2\/posts\/4426"}],"collection":[{"href":"http:\/\/coertvonk.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"http:\/\/coertvonk.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"http:\/\/coertvonk.com\/wp-json\/wp\/v2\/users\/41"}],"replies":[{"embeddable":true,"href":"http:\/\/coertvonk.com\/wp-json\/wp\/v2\/comments?post=4426"}],"version-history":[{"count":8,"href":"http:\/\/coertvonk.com\/wp-json\/wp\/v2\/posts\/4426\/revisions"}],"predecessor-version":[{"id":32634,"href":"http:\/\/coertvonk.com\/wp-json\/wp\/v2\/posts\/4426\/revisions\/32634"}],"wp:featuredmedia":[{"embeddable":true,"href":"http:\/\/coertvonk.com\/wp-json\/wp\/v2\/media\/6617"}],"wp:attachment":[{"href":"http:\/\/coertvonk.com\/wp-json\/wp\/v2\/media?parent=4426"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"http:\/\/coertvonk.com\/wp-json\/wp\/v2\/categories?post=4426"},{"taxonomy":"post_tag","embeddable":true,"href":"http:\/\/coertvonk.com\/wp-json\/wp\/v2\/tags?post=4426"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}