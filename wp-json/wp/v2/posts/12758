{"id":12758,"date":"2015-10-01T18:51:32","date_gmt":"2015-10-02T01:51:32","guid":{"rendered":"http:\/\/coert.vonk.one\/?p=12758"},"modified":"2022-04-18T20:50:23","modified_gmt":"2022-04-19T03:50:23","slug":"fpga-math-verilog","status":"publish","type":"post","link":"/\/hw\/building-math-circuits\/fpga-math-verilog-12758","title":{"rendered":"Introduction"},"content":{"rendered":"<p>\r\n    This article series describes implementations of math operations using circuits of logic gates. Written in Verilog HDL for Altera and Xilinx FPGA&#8217;s.\r\n<\/p>\r\n<p>\r\n    Primary school teaches our students methods for addition, subtraction, multiplication and division. Computer hardware implements similar methods and performs them with astounding speed. This enables applications such as computer vision, process control, encryption, hearing aids, video compression to dubious practices as high-frequency trading.\r\n<\/p>\r\n\r\n<h2>\r\n    Introduction\r\n<\/h2>\r\n\r\n<p>\r\n    This article describes how to build such hardware. In such, it is a sequel to the inquiry &#8220;<a href=\"\/category\/inquiries\/computer-math\">How do Computers do Math?<\/a>&#8221; that in the chapter &#8220;<a href=\"\/inquiries\/computer-math\/math-operations-using-gates-30710\">Math Operations Using Gates<\/a>&#8221; introduced conceptual circuits using logic gates. We will model the various math operations using digital gates. Here we combine the gates into circuits and describe them using the Verilog Hardware Description Language (HDL). These Verilog HDL descriptions are compiled and mapped to a Field Programmable Gate Array (FPGA).\r\n<\/p>\r\n<p>\r\n    Working knowledge of the Verilog HDL is assumed. To learn more about Verilog HDL, I recommend the book FPGA Prototyping with Verilog Examples, an online class or <a href=\"http:\/\/web.mit.edu\/6.111\/www\/f2015\/index.html\">lecture slides<\/a>. To help you get up to speed with the development boards, wrote Getting Started documents for two popular <a href=\"\/hw\/logic\/quartus-cycloneiv-de0nano-15932\">Altera <\/a>and <a href=\"\/hw\/logic\/ise-spartan6-lx9-12604\">Xilinx<\/a> boards.\r\n<\/p>\r\n<p>\r\n    We aim to study algorithms to implement the algorithms in generic VLSI, and as such do will not use the highly optimized carry chain connections present on many FPGAs.\r\n<\/p>\r\n\r\n<h3>\r\n    Hail to the FPGA\r\n<\/h3>\r\n\r\n<p>\r\n    Let&#8217;s take this moment to honor the virtues of the FPGA. A FPGA can do many things at the same time and still respond immediately to input events. It is generally more complicated to create and debug the same logic in a FPGA compared to a microprocessor. Because of the challenges that FPGA development poses, many systems combine FPGAs and microprocessors to get the best of both worlds. For example, to recognize objects in a video stream, one would implement the pre-processing (noise removal, normalization, edge detection) in an FPGA, but the higher-level logic on a CPU or DSP.\r\n<\/p>\r\n<p>\r\n    With a FPGA, you can put massive parallel structures in place. For example, an high-speed data stream can be distributed across the whole FPGA chip to be processed in parallel, instead of having a microprocessor deal with it sequentially.\r\n<\/p>\r\n<p>\r\n    FPGAs can accelerate machine learning algorithms, video encoding, custom algorithms, compression, indexing and cryptography. By implements a soft microprocessor as part of the FPGA it can also handle high level protocols such as handle board management, protocol bridging and security tasks. [<a href=\"https:\/\/ieeexplore.ieee.org\/stamp\/stamp.jsp?arnumber=7359309\">IEEExplore<\/a>]\r\n\r\n<h3>\r\n    Tools\r\n<\/h3>\r\n<p>\r\n    The code examples were tested on an Altera &#8220;Cyclone IV E&#8221; FPGA using Quartus Prime 16.1. Earlier code iterations used a Xilinx &#8220;Spartan-6&#8221; with their ISE Design Suite. The Verilog descriptions should work equally well on other boards or environments.\r\n<\/p>\r\n<p>\r\n    <div class=\"continue-container no-print\">\r\n        <div class=\"continue-content\">\r\n            <div class=\"continue-text\">\r\n                Continue reading:\r\n                <ol>\r\n                    <li><a href=\"\/hw\/building-math-circuits\/demonstration-30764\">Demonstration<\/a><\/li>\r\n                    <li><a href=\"\/hw\/building-math-circuits\/parameterized-adder-and-subtractor-in-verilog-30766\">Adder<\/a> (and subtractor)<\/li>\r\n                    <li><a href=\"\/hw\/building-math-circuits\/faster-parameterized-adder-in-verilog-30769\">Faster adder<\/a> (and subtractor)<\/li>\r\n                    <li><a href=\"\/hw\/building-math-circuits\/parameterized-multiplier-in-verilog-30772\">Multiplier<\/a><\/li>\r\n                    <li><a href=\"\/hw\/building-math-circuits\/faster-parameterized-multiplier-in-verilog-30774\">Faster multiplier<\/a><\/li>\r\n                    <li><a href=\"\/hw\/building-math-circuits\/parameterized-divider-in-verilog-30776\">Divider<\/a><\/li>\r\n                    <li><a href=\"\/hw\/building-math-circuits\/parameterized-square-root-in-verilog-30778\">Square root<\/a> (and conclusion)<\/li>\r\n                <\/ol>\r\n            <\/div>\r\n        <\/div>\r\n    <\/div>    \r\n<\/p>","protected":false},"excerpt":{"rendered":"This series shows some implementation of math operations introduced in chapter 7 of the inquiry &#8220;How do computers do Math?&#8221;.","protected":false},"author":41,"featured_media":12919,"comment_status":"open","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":{"inline_featured_image":false,"_mi_skip_tracking":false},"categories":[420],"tags":[305,310,308,211,104,202,307,309,306,304],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v18.6 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Math operations using logic gates - Introduction - Coert Vonk<\/title>\n<meta name=\"description\" content=\"Implements math operations using circuits of logic gates. Written in Verilog HDL for Altera and Xilinx FPGA&#039;s.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/coert.vonk.one\/hw\/building-math-circuits\/fpga-math-verilog-12758\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Math operations using logic gates - Introduction - Coert Vonk\" \/>\n<meta property=\"og:description\" content=\"Implements math operations using circuits of logic gates. Written in Verilog HDL for Altera and Xilinx FPGA&#039;s.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/coert.vonk.one\/hw\/building-math-circuits\/fpga-math-verilog-12758\" \/>\n<meta property=\"og:site_name\" content=\"Coert Vonk\" \/>\n<meta property=\"article:published_time\" content=\"2015-10-02T01:51:32+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-04-19T03:50:23+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/coert.vonk.one\/wp-content\/uploads\/buildingmath2.jpg\" \/>\n\t<meta property=\"og:image:width\" content=\"200\" \/>\n\t<meta property=\"og:image:height\" content=\"200\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/jpeg\" \/>\n<meta name=\"twitter:card\" content=\"summary\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Coert Vonk\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"2 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/coert.vonk.one\/#website\",\"url\":\"https:\/\/coert.vonk.one\/\",\"name\":\"Coert Vonk\",\"description\":\"Embedded Software Engineer\",\"publisher\":{\"@id\":\"https:\/\/coert.vonk.one\/#\/schema\/person\/5eeda746b43b88312a0621fdc226c70e\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/coert.vonk.one\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/coert.vonk.one\/hw\/building-math-circuits\/fpga-math-verilog-12758#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/coert.vonk.one\/wp-content\/uploads\/buildingmath2.jpg\",\"contentUrl\":\"https:\/\/coert.vonk.one\/wp-content\/uploads\/buildingmath2.jpg\",\"width\":200,\"height\":200,\"caption\":\"derived work\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/coert.vonk.one\/hw\/building-math-circuits\/fpga-math-verilog-12758#webpage\",\"url\":\"https:\/\/coert.vonk.one\/hw\/building-math-circuits\/fpga-math-verilog-12758\",\"name\":\"Math operations using logic gates - Introduction - Coert Vonk\",\"isPartOf\":{\"@id\":\"https:\/\/coert.vonk.one\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/coert.vonk.one\/hw\/building-math-circuits\/fpga-math-verilog-12758#primaryimage\"},\"datePublished\":\"2015-10-02T01:51:32+00:00\",\"dateModified\":\"2022-04-19T03:50:23+00:00\",\"description\":\"Implements math operations using circuits of logic gates. Written in Verilog HDL for Altera and Xilinx FPGA's.\",\"breadcrumb\":{\"@id\":\"https:\/\/coert.vonk.one\/hw\/building-math-circuits\/fpga-math-verilog-12758#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/coert.vonk.one\/hw\/building-math-circuits\/fpga-math-verilog-12758\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/coert.vonk.one\/hw\/building-math-circuits\/fpga-math-verilog-12758#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Vonk Family\",\"item\":\"https:\/\/coert.vonk.one\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Hardware\",\"item\":\"https:\/\/coert.vonk.one\/category\/hw\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"Building math circuits\",\"item\":\"https:\/\/coert.vonk.one\/category\/hw\/building-math-circuits\"},{\"@type\":\"ListItem\",\"position\":4,\"name\":\"Introduction\"}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/coert.vonk.one\/hw\/building-math-circuits\/fpga-math-verilog-12758#article\",\"isPartOf\":{\"@id\":\"https:\/\/coert.vonk.one\/hw\/building-math-circuits\/fpga-math-verilog-12758#webpage\"},\"author\":{\"@id\":\"https:\/\/coert.vonk.one\/#\/schema\/person\/5eeda746b43b88312a0621fdc226c70e\"},\"headline\":\"Introduction\",\"datePublished\":\"2015-10-02T01:51:32+00:00\",\"dateModified\":\"2022-04-19T03:50:23+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/coert.vonk.one\/hw\/building-math-circuits\/fpga-math-verilog-12758#webpage\"},\"wordCount\":467,\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/coert.vonk.one\/#\/schema\/person\/5eeda746b43b88312a0621fdc226c70e\"},\"image\":{\"@id\":\"https:\/\/coert.vonk.one\/hw\/building-math-circuits\/fpga-math-verilog-12758#primaryimage\"},\"thumbnailUrl\":\"https:\/\/coert.vonk.one\/wp-content\/uploads\/buildingmath2.jpg\",\"keywords\":[\"addition\",\"combinatorial logic\",\"division\",\"fpga\",\"Johan Vonk\",\"math\",\"multiplication\",\"square root\",\"subtraction\",\"verilog\"],\"articleSection\":[\"Building math circuits\"],\"inLanguage\":\"en-US\"},{\"@type\":[\"Person\",\"Organization\"],\"@id\":\"https:\/\/coert.vonk.one\/#\/schema\/person\/5eeda746b43b88312a0621fdc226c70e\",\"name\":\"Coert Vonk\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/coert.vonk.one\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"http:\/\/1.gravatar.com\/avatar\/193315b96c6661985694e2ecd91f2996?s=96&d=mm&r=g\",\"contentUrl\":\"http:\/\/1.gravatar.com\/avatar\/193315b96c6661985694e2ecd91f2996?s=96&d=mm&r=g\",\"caption\":\"Coert Vonk\"},\"logo\":{\"@id\":\"https:\/\/coert.vonk.one\/#personlogo\"},\"description\":\"Passionately curious and stubbornly persistent. Enjoys to inspire and consult with others to exchange the poetry of logical ideas.\",\"sameAs\":[\"https:\/\/coert.vonk.one\"],\"url\":\"/\/author\/cvonk\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Math operations using logic gates - Introduction - Coert Vonk","description":"Implements math operations using circuits of logic gates. Written in Verilog HDL for Altera and Xilinx FPGA's.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/coert.vonk.one\/hw\/building-math-circuits\/fpga-math-verilog-12758","og_locale":"en_US","og_type":"article","og_title":"Math operations using logic gates - Introduction - Coert Vonk","og_description":"Implements math operations using circuits of logic gates. Written in Verilog HDL for Altera and Xilinx FPGA's.","og_url":"https:\/\/coert.vonk.one\/hw\/building-math-circuits\/fpga-math-verilog-12758","og_site_name":"Coert Vonk","article_published_time":"2015-10-02T01:51:32+00:00","article_modified_time":"2022-04-19T03:50:23+00:00","og_image":[{"width":200,"height":200,"url":"https:\/\/coert.vonk.one\/wp-content\/uploads\/buildingmath2.jpg","type":"image\/jpeg"}],"twitter_card":"summary","twitter_misc":{"Written by":"Coert Vonk","Est. reading time":"2 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"https:\/\/coert.vonk.one\/#website","url":"https:\/\/coert.vonk.one\/","name":"Coert Vonk","description":"Embedded Software Engineer","publisher":{"@id":"https:\/\/coert.vonk.one\/#\/schema\/person\/5eeda746b43b88312a0621fdc226c70e"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/coert.vonk.one\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https:\/\/coert.vonk.one\/hw\/building-math-circuits\/fpga-math-verilog-12758#primaryimage","inLanguage":"en-US","url":"https:\/\/coert.vonk.one\/wp-content\/uploads\/buildingmath2.jpg","contentUrl":"https:\/\/coert.vonk.one\/wp-content\/uploads\/buildingmath2.jpg","width":200,"height":200,"caption":"derived work"},{"@type":"WebPage","@id":"https:\/\/coert.vonk.one\/hw\/building-math-circuits\/fpga-math-verilog-12758#webpage","url":"https:\/\/coert.vonk.one\/hw\/building-math-circuits\/fpga-math-verilog-12758","name":"Math operations using logic gates - Introduction - Coert Vonk","isPartOf":{"@id":"https:\/\/coert.vonk.one\/#website"},"primaryImageOfPage":{"@id":"https:\/\/coert.vonk.one\/hw\/building-math-circuits\/fpga-math-verilog-12758#primaryimage"},"datePublished":"2015-10-02T01:51:32+00:00","dateModified":"2022-04-19T03:50:23+00:00","description":"Implements math operations using circuits of logic gates. Written in Verilog HDL for Altera and Xilinx FPGA's.","breadcrumb":{"@id":"https:\/\/coert.vonk.one\/hw\/building-math-circuits\/fpga-math-verilog-12758#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/coert.vonk.one\/hw\/building-math-circuits\/fpga-math-verilog-12758"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/coert.vonk.one\/hw\/building-math-circuits\/fpga-math-verilog-12758#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Vonk Family","item":"https:\/\/coert.vonk.one\/"},{"@type":"ListItem","position":2,"name":"Hardware","item":"https:\/\/coert.vonk.one\/category\/hw"},{"@type":"ListItem","position":3,"name":"Building math circuits","item":"https:\/\/coert.vonk.one\/category\/hw\/building-math-circuits"},{"@type":"ListItem","position":4,"name":"Introduction"}]},{"@type":"Article","@id":"https:\/\/coert.vonk.one\/hw\/building-math-circuits\/fpga-math-verilog-12758#article","isPartOf":{"@id":"https:\/\/coert.vonk.one\/hw\/building-math-circuits\/fpga-math-verilog-12758#webpage"},"author":{"@id":"https:\/\/coert.vonk.one\/#\/schema\/person\/5eeda746b43b88312a0621fdc226c70e"},"headline":"Introduction","datePublished":"2015-10-02T01:51:32+00:00","dateModified":"2022-04-19T03:50:23+00:00","mainEntityOfPage":{"@id":"https:\/\/coert.vonk.one\/hw\/building-math-circuits\/fpga-math-verilog-12758#webpage"},"wordCount":467,"commentCount":0,"publisher":{"@id":"https:\/\/coert.vonk.one\/#\/schema\/person\/5eeda746b43b88312a0621fdc226c70e"},"image":{"@id":"https:\/\/coert.vonk.one\/hw\/building-math-circuits\/fpga-math-verilog-12758#primaryimage"},"thumbnailUrl":"https:\/\/coert.vonk.one\/wp-content\/uploads\/buildingmath2.jpg","keywords":["addition","combinatorial logic","division","fpga","Johan Vonk","math","multiplication","square root","subtraction","verilog"],"articleSection":["Building math circuits"],"inLanguage":"en-US"},{"@type":["Person","Organization"],"@id":"https:\/\/coert.vonk.one\/#\/schema\/person\/5eeda746b43b88312a0621fdc226c70e","name":"Coert Vonk","image":{"@type":"ImageObject","@id":"https:\/\/coert.vonk.one\/#personlogo","inLanguage":"en-US","url":"http:\/\/1.gravatar.com\/avatar\/193315b96c6661985694e2ecd91f2996?s=96&d=mm&r=g","contentUrl":"http:\/\/1.gravatar.com\/avatar\/193315b96c6661985694e2ecd91f2996?s=96&d=mm&r=g","caption":"Coert Vonk"},"logo":{"@id":"https:\/\/coert.vonk.one\/#personlogo"},"description":"Passionately curious and stubbornly persistent. Enjoys to inspire and consult with others to exchange the poetry of logical ideas.","sameAs":["https:\/\/coert.vonk.one"],"url":"/\/author\/cvonk"}]}},"_links":{"self":[{"href":"/\/wp-json\/wp\/v2\/posts\/12758"}],"collection":[{"href":"/\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"/\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"/\/wp-json\/wp\/v2\/users\/41"}],"replies":[{"embeddable":true,"href":"/\/wp-json\/wp\/v2\/comments?post=12758"}],"version-history":[{"count":10,"href":"/\/wp-json\/wp\/v2\/posts\/12758\/revisions"}],"predecessor-version":[{"id":32377,"href":"/\/wp-json\/wp\/v2\/posts\/12758\/revisions\/32377"}],"wp:featuredmedia":[{"embeddable":true,"href":"/\/wp-json\/wp\/v2\/media\/12919"}],"wp:attachment":[{"href":"/\/wp-json\/wp\/v2\/media?parent=12758"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"/\/wp-json\/wp\/v2\/categories?post=12758"},{"taxonomy":"post_tag","embeddable":true,"href":"/\/wp-json\/wp\/v2\/tags?post=12758"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}