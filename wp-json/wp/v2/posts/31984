{"id":31984,"date":"2022-03-03T14:17:16","date_gmt":"2022-03-03T22:17:16","guid":{"rendered":"https:\/\/coertvonk.com\/?p=31984"},"modified":"2022-04-17T18:22:49","modified_gmt":"2022-04-18T01:22:49","slug":"deploying","status":"publish","type":"post","link":"http:\/\/coertvonk.com\/sw\/embedded\/opnpool-design\/deploying-31984","title":{"rendered":"Deploying"},"content":{"rendered":"<p>\r\n    Rolling out a device to multiple sites introduces challenges. The WiFi credentials can no longer be part of the source code. Applying firmware updates or accessing crash information over USB becomes cumbersome. Even simply finding the IP address of the device on the LAN may be challenging.\r\n<\/p>\r\n<p>\r\n    To address such challenges we use a three tiered approach, in which the <code>bootloader<\/code> image decides what image to boot.\r\n    <ol>\r\n        <li>\r\n            As usual, the <code>bootloader<\/code> image does some minimum initializations. If it finds a valid <code>ota<\/code> image, it passes control over to that image.  If not, it starts the <code>factory<\/code> image.\r\n        <\/li>\r\n        <li>\r\n            The <code>factory<\/code> image takes care of provisioning WiFi and MQTT credentials with the help of a phone app. These credentials are stored in the <code>nvs<\/code> partition. It then downloads the <code>ota<\/code> image.\r\n        <\/li>\r\n        <li>\r\n            We refer to the <code>ota<\/code> image as the <code>interface<\/code>, as it provides the core of the functionality of the OPNpool device.\r\n        <\/li>\r\n    <\/ol>\r\n<\/p>\r\n<p>\r\n    To facilitate this the flash memory is partitioned as shown below.\r\n\r\n    <p>\r\n        The partition table is shown in the table below.\r\n    \r\n        <div class=\"flex-container tight\">\r\n            <figure>\r\n                <table class=\"partition\">\r\n                    <tr>\r\n                        <th>start<\/th>\r\n                        <th>name<\/th>\r\n                        <th>type<\/th>\r\n                        <th>subtype<\/th>\r\n                    <\/tr>\r\n                    <tr>\r\n                        <td>0x001000<\/td>\r\n                        <td>bootloader<\/td>\r\n                        <td><\/td>\r\n                        <td><\/td>\r\n                    <\/tr>\r\n                    <tr>\r\n                        <td>0x009000<\/td>\r\n                        <td>nvs<\/td>\r\n                        <td>data<\/td>\r\n                        <td>nvs<\/td>\r\n                    <\/tr>\r\n                    <tr>\r\n                        <td>0x00d000<\/td>\r\n                        <td>otadata<\/td>\r\n                        <td>data<\/td>\r\n                        <td>ota<\/td>\r\n                    <\/tr>\r\n                    <tr>\r\n                        <td>0x00f000<\/td>\r\n                        <td>phy_init<\/td>\r\n                        <td>data<\/td>\r\n                        <td>phy<\/td>\r\n                    <\/tr>\r\n                    <tr>\r\n                        <td>0x010000<\/td>\r\n                        <td>factory<\/td>\r\n                        <td>app<\/td>\r\n                        <td>factory<\/td>\r\n                    <\/tr>\r\n                    <tr>\r\n                        <td>0x160000<\/td>\r\n                        <td>interface_0<\/td>\r\n                        <td>app<\/td>\r\n                        <td>ota_0<\/td>\r\n                    <\/tr>\r\n                    <tr>\r\n                        <td>0x260000<\/td>\r\n                        <td>interface_1<\/td>\r\n                        <td>app<\/td>\r\n                        <td>ota_1<\/td>\r\n                    <\/tr>\r\n                    <\/tbody>\r\n                    <tr>\r\n                        <td>0x360000<\/td>\r\n                        <td>coredump<\/td>\r\n                        <td>data<\/td>\r\n                        <td>coredump<\/td>\r\n                    <\/tr>\r\n                <\/table>  \r\n                <figcaption>\r\n                    Partition table\r\n                <\/figcaption>\r\n            <\/figure>\r\n        <\/div>\r\n    <\/p> \r\n    <\/p>\r\n<p>\r\n    The following sections describes the process in further detail. A whole chapter is dedicated to the <code>interface<\/code> image, which provides the core functionality of the OPNpool device.\r\n<\/p>\r\n\r\n<h2 id=\"booloader\">\r\n    Bootloader image\r\n<\/h2>\r\n<p>\r\n    A few more words on the <code>bootloader<\/code>:\r\n    <ul>\r\n        <li>\r\n            If <code>otadata<\/code> partition is erased, it starts the <code>factory<\/code> image (assuming it is present).\r\n        <\/li>\r\n        <li>\r\n            After the first OTA update, the <code>ota_data<\/code> partition is updated to specify which OTA app slot partition should be booted next.\r\n        <\/li>\r\n        <li>\r\n            If the image works fine, it marks itself as <code>ESP_OTA_IMG_VALID<\/code> in the <code>ota_data<\/code>. Otherwise, it marks itself <code>ESP_OTA_IMG_INVALID<\/code>. This mechanism support image rollback to keep the device working after the update. It automatically rolls back to the previous version, if the image doesn&#8217;t pass its self test.\r\n        <\/li>\r\n    <\/ul> \r\n<\/p>\r\n\r\n<h2 id=\"factory\">\r\n    Factory image\r\n<\/h2>\r\n<p>\r\n    The <code>factory<\/code> image, handles the provisioning and triggers an over-the-air (OTA) download of the <code>interface<\/code> image. It then reboots, the <code>bootloader<\/code> will start the <code>interface<\/code> image.\r\n<\/p>\r\n<p>\r\n    These steps are described in detail in the following section.\r\n<\/p>\r\n\r\n<h3 id=\"provisioning\">\r\n    Provisioning WiFi credentials\r\n<\/h3>\r\n<p>\r\n    For testing purposes, <code>WIFI_CONNECT_SSID<\/code>, <code>WIFI_CONNECT_PASSWORD<\/code> and <code>OPNPOOL_MQTT_URL<\/code> can also be provisioned using <code>Kconfig<\/code>. If empty, the device will use credentials from flash memory.\r\n<\/p>\r\n<p>\r\n    A phone is used to connect to the <code>factory<\/code> app using Bluetooth Low Energy (BLE). The <code>factory<\/code> image will advertise itself to the phone app. Using this phone the user specifies the WiFi and MQTT credentials. During the process the phone remains in contact with the ESP while the WiFi is set up and connects to an access point. The WiFi and MQTT credentials are stored in the <code>nvs<\/code> partition of flash memory.\r\n<\/p>\r\n<p>\r\n    You can find the source code of this app in the <code>android<\/code> directory. If you have an iOS phone, or you have problems running the Android app, you can extend <code>esp_prov.py<\/code> to include <code>mqtt_url<\/code> similar to what is shown <a href=\"https:\/\/github.com\/espressif\/esp-idf-provisioning-android\/issues\/11#issuecomment-586973381\"\">here<\/a>&#8220;.\r\n<\/p>\r\n<p>\r\n    The code base uses the git submodule <a href=\"https:\/\/github.com\/cvonk\/ESP32_factory-ble-prov\"><code>ESP32_factory-ble-prov<\/code><\/a>.\r\n<\/p>\r\n<p>\r\n    The figure and video below give an impression of the provisioning process\r\n\r\n    <div class=\"flex-container tight\">\r\n        <figure>\r\n            <pre class=\"brush: plain; title: ; toolbar: false; notranslate\" title=\"\">I (907) factory: Starting BLE provisioning\r\nI (1338) ble_prov: advertising as \"POOL_CC4504\"\r\nI (99768) ble_prov_handler: Received WiFi credentials:\r\n        ssid Guest Barn\r\n        password xxxxxxxxxx\r\nI (100098) ble_prov_handler: WiFi Credentials Applied\r\nI (100288) ble_prov_handler: Connecting ..\r\nI (104328) factory: IP addr 10.1.1.118\r\nI (104328) ble_prov: STA Got IP\r\nI (104328) ota_task: Checking for OTA update (http:\/\/coertvonk.com\/cvonk\/pool\/interface.bin)\r\nI (104338) ota_task: Running from part \"factory\" (0x00010000)\r\nI (104548) ota_task: Writing part ota_0 at offset 0x160000\r\nI (104548) ota_task: Firmware on server: interface.f6d8367-dirty (Mar  2 2022 10:26:42)\r\nI (104548) ota_task: Firmware running:   factory.6bc4c65-dirty (Mar  2 2022 14:52:42)\r\nW (104558) ota_task: Downloading OTA update ..\r\nI (105848) ble_prov_handler: Connected state\r\nI (109668) ota_task: Wrote 5% of 1280 kB\r\n:<\/pre>\r\n            <figcaption>\r\n                Device debug\r\n            <\/figcaption>            \r\n        <\/figure>\r\n        <figure>\r\n            <div class=\"video-container\">\r\n                <video src=\"https:\/\/coertvonk.com\/wp-content\/uploads\/OPNpool-provisioning-1.mp4\" preload=\"auto\" width=\"360\" height=\"720\"><\/video> \r\n            <\/div>\r\n            <figcaption>\r\n                Pool provisioning credentials\r\n            <\/figcaption>\r\n        <\/figure>\r\n    <\/div>\r\n<\/p>\r\n<p>\r\n    Note to self: needs to check MQTT connection status and OTA download progress, awaiting answer to &#8220;<a href=\"https:\/\/github.com\/espressif\/esp-idf-provisioning-android\/issues\/60\">Provisioning with custom-data after device establishes Wi-Fi connection<\/a>&#8220;.\r\n<\/p>\r\n\r\n<h3 id=\"wifi-connect\">\r\n    Connecting to the WiFi network\r\n<\/h3>\r\n<p>\r\n    To establish the WiFi connection, the code base uses the git submodule <a href=\"https:\/\/github.com\/cvonk\/ESP32_wifi-connect\"><code>ESP32_wifi-connect<\/code><\/a>. This component makes this API available as a reusable component. It connects to a WiFi Access Point, and automatically reconnects when the connection drops.\r\n<\/p>\r\n\r\n<h3 id=\"ota\">\r\n    Download the Interface image\r\n<\/h3>\r\n<p>\r\n    The <a href=\"https:\/\/docs.espressif.com\/projects\/esp-idf\/en\/latest\/esp32\/api-reference\/system\/ota.html\">ESP-IDF API<\/a> provides a mechanism that allows a device to update itself based on data received while the normal firmware is running. Our code base uses the git submodule <a href=\"https:\/\/github.com\/cvonk\/ESP32_ota-update-task\"><code>ESP32_ota-update-task<\/code><\/a> that makes the API available as a component.\r\n<\/p>\r\n<p>\r\n    The location of the <code>factory<\/code> image is specified by <code>OTA_UPDATE_FIRMWARE_URL<\/code> in <code>Kconfig<\/code>.\r\n    <details>\r\n        <summary>\r\n            Note on HTTPS\r\n        <\/summary>\r\n        <div style=\"margin-left: 2em; color: grey;\">\r\n            To use an HTTPS connections, you will need to add the server&#8217;s public certificate to <code>components\/ota_update_task\/CMakelists.txt<\/code>, and uncomment some lines in <code>ota_update_task.c<\/code> with <code>server_cert_pem<\/code>.\r\n        <\/div>\r\n    <\/details>\r\n<\/p>\r\n<p>\r\n    The code checks for an OTA update on a network server. If the image is different, it will download it. Upon completion, the device resets to activate the downloaded code. Note that we use the term &#8220;update&#8221; loosely, because it can also be used to downgrade the firmware.\r\n<\/p>\r\n<p>\r\n    To determine if the currently running code is different as the code on the server, it compares the project name, version, date and time. Note that these are not always updated by the SDK. The best way to make sure they are updated is by committing your code to Git and building the project from scratch (by removing the <code>build<\/code> directory).\r\n<\/p>\r\n<p>\r\n    During debugging, you may want to flash the <code>image<\/code> image directly as part of the &#8220;IDF-SDK: Build, flash and start monitor your device&#8221; cycle. To prevent that image from being overwritten by an OTA update, the update mechanism is disabled when the <code>interface<\/code> image is loaded in the factory partition.\r\n<\/p>\r\n<p>\r\n    An example of the update process is shown in the figure below.\r\n\r\n    <div class=\"flex-container\">\r\n        <figure>\r\n            <pre class=\"brush: plain; title: ; toolbar: false; notranslate\" title=\"\">I (3222) ota_task: Checking for OTA update (http:\/\/coertvonk.com\/cvonk\/pool\/interface.bin)\r\n    I (3232) ota_task: Running from part \"factory\" (0x00010000)\r\n    I (3412) ota_task: Writing part ota_0 at offset 0x160000\r\nI (3422) ota_task: Firmware on server: interface.f6d8367-dirty (Mar  2 2022 10:26:42)\r\nI (3422) ota_task: Firmware running:   interface.6bc4c65 (Mar  2 2022 10:29:53)\r\nW (3432) ota_task: Downloading OTA update ..\r\nI (8142) ota_task: Wrote 5% of 1280 kB\r\n:\r\nI (23602) ota_task: Connection closed\r\nI (24322) ota_task: Prepare to restart system!<\/pre>\r\n            <figcaption>\r\n                OTA debug trace\r\n            <\/figcaption>\r\n        <\/figure>\r\n    <\/div>\r\n<\/p>\r\n<p>\r\n    More details of this component can be found at <a href=\"https:\/\/github.com\/cvonk\/ESP32_wifi-connect\">Github<\/a>.   \r\n<\/p>\r\n<p>\r\n    <div class=\"continue-container no-print\">\r\n        <div class=\"continue-content\">\r\n            <div class=\"continue-text\">\r\n                Continue reading to learn about the <a href=\"https:\/\/coertvonk.com\/sw\/embedded\/opnpool-design\/interface-software-31967\">interface software<\/a>.\r\n            <\/div>\r\n        <\/div>\r\n    <\/div>    \r\n<\/p>\r\n","protected":false},"excerpt":{"rendered":"Describes measures needed to roll out the pool interface in the field, such as provisioning and over-the-air updates.","protected":false},"author":41,"featured_media":32091,"comment_status":"open","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":{"inline_featured_image":false,"_mi_skip_tracking":false},"categories":[434],"tags":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v18.6 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>pool interface in the field - Coert Vonk<\/title>\n<meta name=\"description\" content=\"Describes measures needed to roll out the pool interface in the field, such as provisioning and over-the-air updates.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/coertvonk.com\/sw\/embedded\/opnpool-design\/deploying-31984\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"pool interface in the field - Coert Vonk\" \/>\n<meta property=\"og:description\" content=\"Describes measures needed to roll out the pool interface in the field, such as provisioning and over-the-air updates.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/coertvonk.com\/sw\/embedded\/opnpool-design\/deploying-31984\" \/>\n<meta property=\"og:site_name\" content=\"Coert Vonk\" \/>\n<meta property=\"article:published_time\" content=\"2022-03-03T22:17:16+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-04-18T01:22:49+00:00\" \/>\n<meta name=\"twitter:card\" content=\"summary\" \/>\n<meta name=\"twitter:image\" content=\"https:\/\/coertvonk.com\/wp-content\/uploads\/poolinterfaceicon_clipped_CC2022-copy.svg\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Coert Vonk\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"http:\/\/coertvonk.com\/#website\",\"url\":\"http:\/\/coertvonk.com\/\",\"name\":\"Coert Vonk\",\"description\":\"Embedded Software Engineer\",\"publisher\":{\"@id\":\"http:\/\/coertvonk.com\/#\/schema\/person\/5eeda746b43b88312a0621fdc226c70e\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"http:\/\/coertvonk.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/coertvonk.com\/sw\/embedded\/opnpool-design\/deploying-31984#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/coertvonk.com\/wp-content\/uploads\/poolinterfaceicon_clipped_CC2022-copy.svg\",\"contentUrl\":\"https:\/\/coertvonk.com\/wp-content\/uploads\/poolinterfaceicon_clipped_CC2022-copy.svg\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/coertvonk.com\/sw\/embedded\/opnpool-design\/deploying-31984#webpage\",\"url\":\"https:\/\/coertvonk.com\/sw\/embedded\/opnpool-design\/deploying-31984\",\"name\":\"pool interface in the field - Coert Vonk\",\"isPartOf\":{\"@id\":\"http:\/\/coertvonk.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/coertvonk.com\/sw\/embedded\/opnpool-design\/deploying-31984#primaryimage\"},\"datePublished\":\"2022-03-03T22:17:16+00:00\",\"dateModified\":\"2022-04-18T01:22:49+00:00\",\"description\":\"Describes measures needed to roll out the pool interface in the field, such as provisioning and over-the-air updates.\",\"breadcrumb\":{\"@id\":\"https:\/\/coertvonk.com\/sw\/embedded\/opnpool-design\/deploying-31984#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/coertvonk.com\/sw\/embedded\/opnpool-design\/deploying-31984\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/coertvonk.com\/sw\/embedded\/opnpool-design\/deploying-31984#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Vonk Family\",\"item\":\"https:\/\/coertvonk.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Software\",\"item\":\"https:\/\/coertvonk.com\/category\/sw\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"Embedded\",\"item\":\"https:\/\/coertvonk.com\/category\/sw\/embedded\"},{\"@type\":\"ListItem\",\"position\":4,\"name\":\"OPNpool design\",\"item\":\"https:\/\/coertvonk.com\/category\/sw\/embedded\/opnpool-design\"},{\"@type\":\"ListItem\",\"position\":5,\"name\":\"Deploying\"}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/coertvonk.com\/sw\/embedded\/opnpool-design\/deploying-31984#article\",\"isPartOf\":{\"@id\":\"https:\/\/coertvonk.com\/sw\/embedded\/opnpool-design\/deploying-31984#webpage\"},\"author\":{\"@id\":\"http:\/\/coertvonk.com\/#\/schema\/person\/5eeda746b43b88312a0621fdc226c70e\"},\"headline\":\"Deploying\",\"datePublished\":\"2022-03-03T22:17:16+00:00\",\"dateModified\":\"2022-04-18T01:22:49+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/coertvonk.com\/sw\/embedded\/opnpool-design\/deploying-31984#webpage\"},\"wordCount\":473,\"commentCount\":0,\"publisher\":{\"@id\":\"http:\/\/coertvonk.com\/#\/schema\/person\/5eeda746b43b88312a0621fdc226c70e\"},\"image\":{\"@id\":\"https:\/\/coertvonk.com\/sw\/embedded\/opnpool-design\/deploying-31984#primaryimage\"},\"thumbnailUrl\":\"https:\/\/coertvonk.com\/wp-content\/uploads\/poolinterfaceicon_clipped_CC2022-copy.svg\",\"articleSection\":[\"OPNpool design\"],\"inLanguage\":\"en-US\"},{\"@type\":[\"Person\",\"Organization\"],\"@id\":\"http:\/\/coertvonk.com\/#\/schema\/person\/5eeda746b43b88312a0621fdc226c70e\",\"name\":\"Coert Vonk\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"http:\/\/coertvonk.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"http:\/\/1.gravatar.com\/avatar\/193315b96c6661985694e2ecd91f2996?s=96&d=mm&r=g\",\"contentUrl\":\"http:\/\/1.gravatar.com\/avatar\/193315b96c6661985694e2ecd91f2996?s=96&d=mm&r=g\",\"caption\":\"Coert Vonk\"},\"logo\":{\"@id\":\"http:\/\/coertvonk.com\/#personlogo\"},\"description\":\"Passionately curious and stubbornly persistent. Enjoys to inspire and consult with others to exchange the poetry of logical ideas.\",\"sameAs\":[\"https:\/\/coertvonk.com\"],\"url\":\"http:\/\/coertvonk.com\/author\/cvonk\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"pool interface in the field - Coert Vonk","description":"Describes measures needed to roll out the pool interface in the field, such as provisioning and over-the-air updates.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/coertvonk.com\/sw\/embedded\/opnpool-design\/deploying-31984","og_locale":"en_US","og_type":"article","og_title":"pool interface in the field - Coert Vonk","og_description":"Describes measures needed to roll out the pool interface in the field, such as provisioning and over-the-air updates.","og_url":"https:\/\/coertvonk.com\/sw\/embedded\/opnpool-design\/deploying-31984","og_site_name":"Coert Vonk","article_published_time":"2022-03-03T22:17:16+00:00","article_modified_time":"2022-04-18T01:22:49+00:00","twitter_card":"summary","twitter_image":"https:\/\/coertvonk.com\/wp-content\/uploads\/poolinterfaceicon_clipped_CC2022-copy.svg","twitter_misc":{"Written by":"Coert Vonk","Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebSite","@id":"http:\/\/coertvonk.com\/#website","url":"http:\/\/coertvonk.com\/","name":"Coert Vonk","description":"Embedded Software Engineer","publisher":{"@id":"http:\/\/coertvonk.com\/#\/schema\/person\/5eeda746b43b88312a0621fdc226c70e"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"http:\/\/coertvonk.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https:\/\/coertvonk.com\/sw\/embedded\/opnpool-design\/deploying-31984#primaryimage","inLanguage":"en-US","url":"https:\/\/coertvonk.com\/wp-content\/uploads\/poolinterfaceicon_clipped_CC2022-copy.svg","contentUrl":"https:\/\/coertvonk.com\/wp-content\/uploads\/poolinterfaceicon_clipped_CC2022-copy.svg"},{"@type":"WebPage","@id":"https:\/\/coertvonk.com\/sw\/embedded\/opnpool-design\/deploying-31984#webpage","url":"https:\/\/coertvonk.com\/sw\/embedded\/opnpool-design\/deploying-31984","name":"pool interface in the field - Coert Vonk","isPartOf":{"@id":"http:\/\/coertvonk.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/coertvonk.com\/sw\/embedded\/opnpool-design\/deploying-31984#primaryimage"},"datePublished":"2022-03-03T22:17:16+00:00","dateModified":"2022-04-18T01:22:49+00:00","description":"Describes measures needed to roll out the pool interface in the field, such as provisioning and over-the-air updates.","breadcrumb":{"@id":"https:\/\/coertvonk.com\/sw\/embedded\/opnpool-design\/deploying-31984#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/coertvonk.com\/sw\/embedded\/opnpool-design\/deploying-31984"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/coertvonk.com\/sw\/embedded\/opnpool-design\/deploying-31984#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Vonk Family","item":"https:\/\/coertvonk.com\/"},{"@type":"ListItem","position":2,"name":"Software","item":"https:\/\/coertvonk.com\/category\/sw"},{"@type":"ListItem","position":3,"name":"Embedded","item":"https:\/\/coertvonk.com\/category\/sw\/embedded"},{"@type":"ListItem","position":4,"name":"OPNpool design","item":"https:\/\/coertvonk.com\/category\/sw\/embedded\/opnpool-design"},{"@type":"ListItem","position":5,"name":"Deploying"}]},{"@type":"Article","@id":"https:\/\/coertvonk.com\/sw\/embedded\/opnpool-design\/deploying-31984#article","isPartOf":{"@id":"https:\/\/coertvonk.com\/sw\/embedded\/opnpool-design\/deploying-31984#webpage"},"author":{"@id":"http:\/\/coertvonk.com\/#\/schema\/person\/5eeda746b43b88312a0621fdc226c70e"},"headline":"Deploying","datePublished":"2022-03-03T22:17:16+00:00","dateModified":"2022-04-18T01:22:49+00:00","mainEntityOfPage":{"@id":"https:\/\/coertvonk.com\/sw\/embedded\/opnpool-design\/deploying-31984#webpage"},"wordCount":473,"commentCount":0,"publisher":{"@id":"http:\/\/coertvonk.com\/#\/schema\/person\/5eeda746b43b88312a0621fdc226c70e"},"image":{"@id":"https:\/\/coertvonk.com\/sw\/embedded\/opnpool-design\/deploying-31984#primaryimage"},"thumbnailUrl":"https:\/\/coertvonk.com\/wp-content\/uploads\/poolinterfaceicon_clipped_CC2022-copy.svg","articleSection":["OPNpool design"],"inLanguage":"en-US"},{"@type":["Person","Organization"],"@id":"http:\/\/coertvonk.com\/#\/schema\/person\/5eeda746b43b88312a0621fdc226c70e","name":"Coert Vonk","image":{"@type":"ImageObject","@id":"http:\/\/coertvonk.com\/#personlogo","inLanguage":"en-US","url":"http:\/\/1.gravatar.com\/avatar\/193315b96c6661985694e2ecd91f2996?s=96&d=mm&r=g","contentUrl":"http:\/\/1.gravatar.com\/avatar\/193315b96c6661985694e2ecd91f2996?s=96&d=mm&r=g","caption":"Coert Vonk"},"logo":{"@id":"http:\/\/coertvonk.com\/#personlogo"},"description":"Passionately curious and stubbornly persistent. Enjoys to inspire and consult with others to exchange the poetry of logical ideas.","sameAs":["https:\/\/coertvonk.com"],"url":"http:\/\/coertvonk.com\/author\/cvonk"}]}},"_links":{"self":[{"href":"http:\/\/coertvonk.com\/wp-json\/wp\/v2\/posts\/31984"}],"collection":[{"href":"http:\/\/coertvonk.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"http:\/\/coertvonk.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"http:\/\/coertvonk.com\/wp-json\/wp\/v2\/users\/41"}],"replies":[{"embeddable":true,"href":"http:\/\/coertvonk.com\/wp-json\/wp\/v2\/comments?post=31984"}],"version-history":[{"count":10,"href":"http:\/\/coertvonk.com\/wp-json\/wp\/v2\/posts\/31984\/revisions"}],"predecessor-version":[{"id":32311,"href":"http:\/\/coertvonk.com\/wp-json\/wp\/v2\/posts\/31984\/revisions\/32311"}],"wp:featuredmedia":[{"embeddable":true,"href":"http:\/\/coertvonk.com\/wp-json\/wp\/v2\/media\/32091"}],"wp:attachment":[{"href":"http:\/\/coertvonk.com\/wp-json\/wp\/v2\/media?parent=31984"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"http:\/\/coertvonk.com\/wp-json\/wp\/v2\/categories?post=31984"},{"taxonomy":"post_tag","embeddable":true,"href":"http:\/\/coertvonk.com\/wp-json\/wp\/v2\/tags?post=31984"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}